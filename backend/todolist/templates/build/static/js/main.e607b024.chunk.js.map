{"version":3,"sources":["components/NavTab.js","components/ListsTab.js","components/NavBar.js","components/TaskButton.js","components/CheckBox.js","components/Task.js","components/ViewButton(sidebar).js","components/View.js","components/ListButtons.js","components/ListView.js","components/Registration.js","App.js","serviceWorker.js","index.js"],"names":["NavTab","props","xstyle","fontSize","color","tab","React","createRef","prevProps","size","this","tabPosMod","passRect","current","getBoundingClientRect","right","styling","cursor","display","backgroundColor","colourCode","paddingTop","paddingBottom","width","marginLeft","horizontalAlign","textAlign","activeView","className","filter","length","text","slice","ref","key","style","onClick","e","changeView","target","closeNavTab","Component","ListsTab","transitionDuration","left","onMouseOver","hover","onMouseLeave","hoverLeave","NavBar","pos","type","setState","listTabPos","lastTabPos","lastTabClick","stopPropagation","state","windowW","listTabClick","barStyle","userSelect","whiteSpace","scrollStyle","position","zIndex","marginTop","height","lineHeight","views","window","innerWidth","handleResize","bind","WindowSize","event","addEventListener","nextProps","next","Object","keys","thisprops","i","includes","push","splice","indexOf","scrollLeft","scrollRight","assign","tabs","count","func","changeColour","TaskButton","buttonFunctions","onMouseDown","symbol","CheckBox","preventPropogation","onMouseUp","mouseUpFix","select","priority","top","transform","border","check","Task","changeTaskColour","taskColour","value","dragging","textShadow","hoverEnd","optionsClick","optionsVisibility","descriptionClick","console","log","defaultStyle","textStyle","textSpan","colour","wordBreak","scrollWidth","innerText","completed","name","selected","pointerEvents","mouse","y","x","ghostDiv","dragOver","dragStart","selectTask","float","openDescription","ViewButton","customColourHandle","customColour","colourForm","img","customColourForm","colourUI","createColour","ifDisabled","disabled","opacity","l","changeTab","paletteTab","buttonStyle","marginRight","marginBottom","colourStyle","margin","borderRadius","verticalAlign","paletteStyle","borderBottomLeftRadius","borderBottomRightRadius","padding","renameStyle","borderBottom","renameButton","renameContainer","paletteTabs","chooseColour","button","src","symbolStyle","renameUI","ui","maxLength","onChange","autoFocus","tabLeft","borderTopLeftRadius","tabRight","borderTopRightRadius","listView","colourSet","rightFunc","colourFunc","update","leftFunc","updateList","listId","colours","descriptionUI","save","View","taskComplete","tasks","JSON","parse","stringify","updates","id","set","taskRename","newname","taskName","buttonUI","description","rename","showing","inputHandle","input","selectTaskCheck","removeTag","del","firstCheck","first","delete","checkBox","setMouse","clientX","clientY","draggedOver","parseInt","priorityUpdateInfo","draggedFrom","draggedTo","taskOrderUpdate","fromTo","higher","Math","max","min","drop","closeOptions","box","bottom","fixPriority","idArr","taskDelete","taskIds","taskKeys","task","content","modified","updated","priorityUpdate","xhr","XMLHttpRequest","open","setRequestHeader","Cookies","get","onload","status","send","taskCreate","values","response","colourPalette","palette","closeDescription","editDescription","textArea","focus","saveNewDescription","changeDescription","inputStyle","maxWidth","maxHeight","buttonsStyle","descriptionContainer","descriptionStyle","overflow","textAreaStyle","resize","closeDescriptionStyle","tasksLoaded","responseType","map","reference","show","taskLabel","onMouseMove","editViewColour","readOnly","ListButtons","openNavTab","selectList","ListView","listColour","lists","nameArr","listRename","listName","listCreate","deleteList","listIds","selectListCheck","listsLoaded","list","passFunction","buttons","Registration","register","frontEndRegisterCheck","errorHandle","username","registerUser","password","registerPass","password2","registerPass2","login","frontEndLoginCheck","loginUser","loginPass","loginUserHandle","borderColor","loginPassHandle","registerUserHandle","registerPassHandle","registerPass2Handle","tabClick","view","inputErrors","container","alignItems","justifyItems","nav","gridTemplateColumns","errorMessage","boxShadow","loginTab","registerTab","errorUsername","errorPassword","errorPassword2","userInputStyle","passInputStyle","pass2InputStyle","loginStyle","registerStyle","App","callback","localStorage","setItem","loggedIn","failSafe","click","mouseUp","document","createEvent","initEvent","dispatchEvent","parentNode","viewKey","path","activeViewContainer","user","documentElement","body","getElementById","getItem","logout","href","minHeight","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e607b024.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\n//user can customize colour of tab and its view in the list view\nexport default class NavTab extends Component {\n\n    constructor(props){\n        super(props)\n        this.tab = React.createRef()\n    }\n\n    xstyle = {\n        fontSize: '90%',\n        color: 'black',\n    }\n    componentDidUpdate(prevProps){\n        if(prevProps.size != this.props.size || prevProps.tabPosMod != this.props.tabPosMod){\n            this.props.passRect(this.tab.current.getBoundingClientRect().right)\n        }\n    }\n    componentDidMount(){\n        this.props.passRect(this.tab.current.getBoundingClientRect().right)\n    }\n    render() {\n        var styling = {\n            cursor: 'pointer',\n            display: 'inline-block',\n            backgroundColor: this.props.colourCode,\n            color: 'white',\n            paddingTop: '5px',\n            paddingBottom: '5px',\n            width: '100px',\n            marginLeft: '10px',\n            horizontalAlign: 'middle',\n            textAlign: 'center',\n            fontSize: '110%',\n        }\n        if (this.props.activeView != this.props.className) {\n            styling.filter = 'brightness(95%)' \n        }\n        if (this.props.className.length > 7){\n            var text = this.props.className.slice(0,5)+'...'\n        } else {\n            var text = this.props.className\n        }\n\n        return <div ref={this.tab}\n        key={this.props.className+'tab'}\n        className={this.props.className}\n        style={styling}\n        onClick={(e)=>this.props.changeView(e.target.className,e.target.style.backgroundColor)}>\n            <span \n            style={this.xstyle}\n            onClick={this.props.closeNavTab}\n            >x</span>\n            {text}\n        </div>\n    };\n}","import React, { Component } from 'react'\n\n\n//give x to close\nexport default class ListsTab extends Component {\n\n    constructor(props){\n        super(props)\n        this.tab = React.createRef()\n    }\n    componentDidUpdate(prevProps){\n        if(prevProps.tabPosMod != this.props.tabPosMod ){\n            this.props.passRect(this.tab.current.getBoundingClientRect().left,'list')\n        }\n    }\n    styling = {\n        cursor: 'pointer',\n        display: 'inline-block',\n        backgroundColor: '#079d41',\n        transitionDuration: '0.5s',\n        color: 'white',\n        paddingTop: '5px',\n        paddingBottom: '5px',\n        width: '100px',\n        marginLeft: '10px',\n        horizontalAlign: 'middle',\n        textAlign: 'center',\n        fontSize: '110%'\n    }\n    \n    render() {\n        return <div ref={this.tab}\n            className='Lists'\n            style={this.styling}\n            onMouseOver={this.hover}\n            onMouseLeave={this.hoverLeave}\n            onClick={(e)=>this.props.changeView(e.target.className,e.target.style.backgroundColor)}>\n            Lists\n        </div>\n    };\n}","import React, { Component } from 'react'\nimport NavTab from './NavTab'\nimport ListsTab from './ListsTab'\n\nexport default class NavBar extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.state={\n            views:[],\n            lastTabPos:0,\n            listTabPos:0,\n            tabPosMod:0,\n            windowW:window.innerWidth\n        }\n        this.handleResize = this.handleResize.bind(this)\n    }\n    passRect = (pos,type) => {\n        if (type=='list'){\n            this.setState({\n                listTabPos : pos\n            })\n        } else {\n            this.setState({\n                lastTabPos : pos\n            })\n        }\n    }\n    handleResize(WindowSize, event) {\n        this.setState({windowW: window.innerWidth})\n    }\n    componentDidMount() {\n        window.addEventListener(\"resize\", this.handleResize);\n    }\n    componentWillUnmount() {\n        window.addEventListener(\"resize\", null);\n    }\n    componentWillUpdate(nextProps){\n        //this is so tabs will be displayed in the order that they are opened\n        var next = Object.keys(nextProps.views).length\n        var thisprops = Object.keys(this.props.views).length\n        var views = [...this.state.views]\n        if (next > thisprops){\n            for (let i in nextProps.views){\n                if (!this.state.views.includes(i)){\n                    views.push(i)\n                }\n            }\n            this.setState({\n                views:views\n            })\n        } else if (next < thisprops) {\n            for (let i of views){\n                if (!Object.keys(nextProps.views).includes(i)){\n                    views.splice(views.indexOf(i),1)\n                }\n            }\n            this.setState({\n                views:views\n            })\n        }\n    }\n    lastTabClick = e =>{\n        e.stopPropagation()\n        if(this.state.lastTabPos>this.state.windowW){//unnecassery? \n            this.setState({\n                tabPosMod:this.state.tabPosMod-50\n            })\n        }\n    }\n    listTabClick = e =>{\n        e.stopPropagation()\n            this.setState({\n                tabPosMod:this.state.tabPosMod+50\n            })\n    }\n    barStyle = {\n        userSelect:'none',\n        paddingTop: '5px',\n        backgroundColor: '#373737',\n        width : '100%',\n        whiteSpace: 'nowrap'\n    }\n    scrollStyle={\n        position:'absolute',\n        zIndex:'1',\n        marginTop:'-5px',\n        textAlign: 'center',\n        height: '36px',\n        width:'20px',\n        lineHeight:'36px',\n        color:'white',\n        backgroundColor:'black'\n    }\n\n    render() {\n        var barStyle = Object.assign({left:this.state.tabPosMod},this.barStyle)\n        var scrollLeft,scrollRight\n        if (this.state.lastTabPos > this.state.windowW){\n            var right = Object.assign({right:0},{...this.scrollStyle})\n            scrollRight=<span style={right} \n                onClick={this.lastTabClick}>\n                ▶\n            </span>\n        }\n        if (this.state.listTabPos < 0) {\n            var left = Object.assign({left:0},{...this.scrollStyle})\n            scrollLeft=<span style={left} \n                onClick={this.listTabClick}>\n                ◀\n            </span>\n        }\n        var tabs=[]\n        var count=0\n        var size=this.state.views.length\n        var func =()=>{return}\n        for (let i of this.state.views) {\n            if(count==size-1){\n                func = this.passRect\n            }\n            if (this.props.views[i]){\n                tabs.push(\n                <NavTab closeNavTab={this.props.closeNavTab} \n                    size={size}\n                    tabPosMod={this.state.tabPosMod}\n                    className={i} \n                    passRect={func}\n                    colourCode={this.props.views[i].colourCode}\n                    changeView={this.props.changeView}\n                    activeView={this.props.activeView}/>\n                ) \n            }\n            count++\n        }\n        return (\n            <header style={barStyle}>\n                {scrollLeft}\n                <span style={{marginLeft:this.state.tabPosMod}}>\n                    <ListsTab changeColour={this.props.changeColour}\n                        changeView={this.props.changeView}\n                        tabPosMod={this.state.tabPosMod}\n                        passRect={func}/>\n                    {tabs}\n                </span>\n                {scrollRight}\n            </header>\n        )\n    };\n}","import React, { Component } from 'react'\n\nexport default class TaskButton extends Component {\n    constructor(props){\n        super(props)\n    }\n\n    styling = {\n        color : 'white',\n        backgroundColor : 'black',\n        display : 'inline-block',\n        width : '20px',\n        height : '20px',\n        //marginLeft : '2px',\n        cursor : 'pointer',     \n    }\n\n    render () {\n        return <div \n        onMouseOver={this.props.buttonFunctions.onMouseOver}\n        onMouseLeave={this.props.buttonFunctions.onMouseLeave}\n        onMouseDown={this.props.buttonFunctions.onMouseDown}\n        onClick={this.props.onClick}\n        style={this.styling}>{this.props.symbol}</div>\n    }\n}","import React, { Component } from 'react'\n\nexport default class CheckBox extends Component {\n    constructor(props){\n        super(props)\n    }\n\n\n    render() {\n\n        return <span\n        onMouseOver={e=>{\n            e.target.style.backgroundColor='rgba(250,250,250,1)'\n        }}\n        onMouseLeave={e=>{\n            e.target.style.backgroundColor='rgba(240,240,240,1)'\n        }}\n        onMouseDown={this.props.preventPropogation}\n        onMouseUp={this.props.mouseUpFix}\n        onClick={e=>this.props.select(e,this.props.priority)}\n        style={{\n            display : 'inline-block',\n            //tick needs to be moved to the left slightly\n            userSelect : 'none',\n            //cursor : 'pointer',\n            color : 'black',\n            lineHeight : '9px',\n            position : this.props.position,\n            top: this.props.top,\n            transform: 'translateY(-50%)',\n            height : '10px',\n            width : '10px',\n            left : this.props.left,\n            border : '1px solid rgba(200,200,200,1)',\n            backgroundColor : 'rgba(240,240,240,1)'\n        }}>\n            {this.props.check}\n        </span>\n    }\n}","import React, { Component } from 'react'\nimport TaskButton from './TaskButton'\nimport CheckBox from './CheckBox'\n\nexport default class Task extends Component {\n    constructor(props) {\n        super(props)\n        this.textSpan = React.createRef()\n        this.state = {\n            taskColour : this.props.colour,\n            lineHeight : '50px',\n            wordBreak : ''\n        }\n    }\n\n    changeTaskColour = e => {\n        this.setState({\n            taskColour : e.target.value\n        })\n    }\n\n    preventPropogation = e => {\n        e.stopPropagation()\n    }\n\n    hover = e => {\n        if(!this.props.dragging){\n            e.target.style.textShadow = '0px 0px 8px cyan'\n        }\n    }\n    \n    hoverEnd = e => {\n        e.target.style.textShadow = 'none'\n    }\n\n    optionsClick = e => {\n        if (this.state.optionsVisibility == 'none') {\n            this.setState({\n                optionsVisibility : 'inline-block'\n            })\n        } else {\n            this.setState({\n                optionsVisibility : 'none'\n            })\n        }\n    }\n\n    descriptionClick = e => {\n        console.log('description')\n    }\n\n    buttonFunctions = {\n        onMouseOver : this.hover,\n        onMouseLeave : this.hoverEnd,\n        onMouseDown : this.preventPropogation\n    }\n\n    defaultStyle = {\n        userSelect : 'none',\n        width : '250px',\n        height : '50px',\n        textAlign : 'center',\n    }\n    textStyle = {\n        position: 'absolute', \n        left: '30px', \n        width:'200px',\n        fontSize:'90%' \n    }\n    componentDidMount(){\n        if(this.textSpan.current.scrollWidth>200){\n            this.setState({\n                lineHeight:'25px',\n                wordBreak:'break-all'\n            })\n        }\n    }\n    render() {\n        var textStyle = Object.assign({\n            lineHeight : this.state.lineHeight, \n            wordBreak : this.state.wordBreak\n        },{...this.textStyle})\n        if (!this.state.wordBreak){\n            textStyle['whiteSpace'] = 'nowrap'\n        }\n        var innerText = this.props.completed ? <s>{this.props.name}</s> : this.props.name\n        var check = this.props.selected ? '✔' : ''\n        if (this.props.dragging && this.props.dragging.name == this.props.name) {\n            var styling = Object.assign({\n                pointerEvents : 'none',\n                zIndex : 1,\n                position : 'fixed',\n                top : (this.props.mouse.y-25)+'px',\n                left : (this.props.mouse.x-125)+'px',\n                backgroundColor :  this.props.colour,\n            },this.defaultStyle)\n\n            var ghostDiv = <div style={{\n                position : 'relative',\n                marginTop : '20px',\n                marginLeft : this.props.marginLeft,\n                width : '250px',\n                height : '50px',\n                transform : this.props.size\n          }}>\n            </div>\n        } else {\n            var styling = Object.assign({\n                marginLeft : this.props.marginLeft,\n                position : 'relative',\n                marginTop : '20px',               \n                backgroundColor :  this.props.colour,\n            },this.defaultStyle)\n            \n            var ghostDiv = null\n        }    \n        return( \n            <>\n            <div style={styling}\n                onClick={e=>e.stopPropagation()}\n                onMouseUp={this.props.mouseUpFix}\n                onMouseOver={e =>this.props.dragOver(e,this.props.priority)}\n                onMouseDown={e =>this.props.dragStart(e,this.props.priority,this.props.name)}\n            >\n                <CheckBox\n                    position={'absolute'}\n                    top={'50%'}\n                    left={'15px'} \n                    priority={this.props.priority} \n                    preventPropogation={this.preventPropogation}\n                    select={this.props.selectTask}\n                    check={check}/>\n                <span \n                    style={{ \n                    position : 'absolute',\n                    top : '30px',\n                    left : '230px',\n                    float : 'right',                     \n                }}>\n                    <TaskButton\n                        buttonFunctions={this.buttonFunctions}\n                        mouseUpFix={this.props.mouseUpFix}\n                        onClick={e=>this.props.openDescription(e,this.props.priority)}\n                        symbol='?'\n                    />\n                    </span>\n                <div ref={this.textSpan}\n                    style={textStyle}>\n                    {innerText}\n                </div> \n\n            </div> \n            {ghostDiv}\n            </>\n        )\n    }\n}","import React, { Component } from 'react'\n\nexport default class ViewButton extends Component{\n    constructor(props){\n        super(props)\n        this.chooseColour=React.createRef()\n        this.state = {\n            value : '',\n            paletteTab : true,\n            customColour : 'none'\n        }\n    }\n    customColourHandle = e =>{\n        this.setState({\n            customColour : e.target.value\n        })\n    }\n    colourForm=()=>{\n        if (this.props.img != 'colour.png'){return}\n        if (this.state.customColourForm == 'inline' || !this.props.colourUI){\n            var display = 'none'\n        } else if (this.state.customColourForm == 'none'){\n            var display = 'inline'\n        }\n        this.setState({\n            customColourForm : display\n        })\n    }\n    createColour = (colourCode, style, func) => {\n        style=Object.assign({backgroundColor:colourCode},style)\n        return <span style={style} onClick={func}/>\n    }\n    ifDisabled = (style) => {\n        if (!this.props.disabled) {\n            style.opacity = '0.5'\n            style.pointerEvents = 'none'\n        }\n        if (this.props.l){\n            style.marginLeft=this.props.l\n        }\n        return style\n    }\n    changeTab = () => {\n        this.setState({\n            paletteTab : !this.state.paletteTab\n        })\n    }\n\n    buttonStyle = {\n        userSelect : 'none',\n        display : 'block',\n        cursor : 'pointer',\n        marginRight : '10px',\n        marginLeft : '10px',\n        marginBottom : '10px'\n    }\n    colourStyle = {\n        userSelect : 'none',\n        color : 'rgba(0,0,0,0.5)',\n        display : 'inline-block',\n        margin:'1px',\n        width:'20px',\n        height:'20px',\n        cursor:'pointer',\n        borderRadius : '10px',\n        border:'solid 1px rgba(0,0,0,0.3)',\n        verticalAlign: 'middle' \n    }\n    paletteStyle={\n        textAlign : 'center',//hmm\n        float:'right',\n        position:'absolute',\n        marginTop:'-18px',\n        marginLeft:'52px',\n        width:'100px',\n        backgroundColor:'rgba(255,255,255,0.2)',\n        borderBottomLeftRadius : '10px',\n        borderBottomRightRadius : '10px',\n        padding:'1px'\n    }\n    renameStyle={\n        backgroundColor : 'rgba(255,255,255,0.2)', \n        border: 'none',\n        borderBottom: 'solid 2px', \n        width: '100px',\n        position:'absolute',\n        top:'10px',\n        left:'50px'\n    }\n    renameButton={\n        position:'absolute',\n        left:'150px',\n        top:'7px'\n    }\n    renameContainer={\n        float:'right',\n        marginTop:'-38px',\n        marginLeft:'52px'\n    }\n    paletteTabs = {\n        userSelect : 'none',\n        lineHeight : '20px',\n        textAlign : 'center',\n        fontSize : '80%',\n        width : '51px',\n        height : '20px',\n        backgroundColor:'rgba(255,255,255,0.2)',\n        position: 'absolute',\n        top:'-20px',\n    }\n    render(){\n        if (this.props.img) {\n            var buttonStyle = this.ifDisabled({...this.buttonStyle})\n            var button = <img src={this.props.img} \n                            onClick={e=>{this.props.func(e);this.colourForm()}}\n                            style={buttonStyle} \n                            width='40' height='35'/>\n        } else {\n            var symbolStyle = this.ifDisabled((\n                    Object.assign({\n                        lineHeight : '35px',\n                        fontSize:'300%',\n                        height : '35px',\n                        width : '40px'\n                    },{...this.buttonStyle})\n            ))\n            \n            var button = <div style={symbolStyle} \n                            onClick={this.props.func}>\n                            {this.props.symbol}\n                        </div>\n        }\n        var paletteStyle = {...this.paletteStyle}\n        if (this.props.renameUI && this.props.disabled){\n            var ui = (\n                <span style={this.renameContainer}>\n                    <input style={this.renameStyle}\n                        maxLength={40}\n                        onChange={e=>this.setState({value:e.target.value})} \n                        autoFocus='true'/>\n                    <button style={this.renameButton}\n                        onClick={(e)=>this.props.func(e,this.state.value)}>\n                        rename\n                    </button>\n                </span>\n            )\n        } else if(this.props.colourUI){\n            var tabLeft = Object.assign({left:0,borderTopLeftRadius:'10px'}, {...this.paletteTabs})\n            var tabRight = Object.assign({right:0,borderTopRightRadius:'10px'}, {...this.paletteTabs})\n            if (!this.props.listView && this.state.paletteTab){//task tab on View\n                tabRight.filter = 'brightness(70%)'\n                tabRight.cursor = 'pointer'\n                var colourSet = ['#333399','purple','#00d6bd','#a90a0a','#079d41','#df7334','#a9993c','pink']\n                var rightFunc = this.changeTab\n                var colourFunc = this.props.update\n            } else if (!this.props.listView && !this.state.paletteTab){\n                tabLeft.filter = 'brightness(70%)'//view tab on View\n                tabLeft.cursor = 'pointer'\n                var colourSet = ['#333399','purple','#00d6bd','#a90a0a','#40cc3e','#df7334','#a9993c','pink']\n                var leftFunc = this.changeTab\n                var colourFunc = (e)=>this.props.updateList(e,this.props.listId)\n            \n            } else if (this.props.listView) { //palette on ListView\n                paletteStyle = Object.assign({borderTopLeftRadius:'10px', borderTopRightRadius:'10px'}, paletteStyle)\n                paletteStyle.marginTop='-38px'\n                var colourSet = ['#333399','purple','#00d6bd','#a90a0a','#40cc3e','#df7334','#a9993c','pink']\n                var colourFunc = (e)=>this.props.update(e)\n            }\n            var tabs = this.props.listView ? null : <>\n                <span style={tabLeft} onClick={leftFunc}>Tasks</span>\n                <span style={tabRight} onClick={rightFunc}>View</span></>\n            var colours = []\n            for (let i of colourSet){\n                colours.push(this.createColour(i,this.colourStyle, colourFunc))\n            }\n            var ui = (\n                <span style={paletteStyle}>\n                    <span>\n                        {tabs}\n                    </span>\n                    <span style={{width:'100px'}}>\n                        {colours}\n                       {/*option to add custom colour. works, but looked horrible. \n                        <span style={this.colourStyle} onClick={this.colourForm}>+\n                            <div style={{display:this.state.customColourForm}}>\n                                <button onClick={e=>{e.stopPropagation();this.chooseColour.current.click()}}>\n                                    Choose\n                                </button>\n                                <input type='color'\n                                    style={{display:'none'}}\n                                    ref={this.chooseColour}\n                                    onClick={e=>e.stopPropagation()}\n                                    onChange={this.customColourHandle}/>\n                                <button style={{backgroundColor : this.state.customColour}}\n                                    onClick={colourFunc}>Submit</button>\n                            </div>\n                        </span>*/}\n                    </span>\n                </span>\n            )\n        } else if (this.props.descriptionUI){\n            var ui = <button onClick={this.props.save} style={{position:'absolute',top:'60px',right:'40px'}}>save</button>\n\n        } else {\n            var ui = null\n        }\n    return (\n        <div style={this.props.style}//for description button\n            onMouseUp={this.props.mouseUpFix}\n            onClick={e=>e.stopPropagation()}>\n            {button}\n            {ui}\n        </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport Task from './Task'\nimport ViewButton_s from './ViewButton(sidebar)'\nimport Cookies from 'js-cookie'\n\nexport default class View extends Component {\n    constructor(props){\n        super(props)\n        this.textArea=React.createRef()\n        this.state = {\n            tasks : {},\n            tasksLoaded : false,\n            dragging : null,\n            draggedOver : null,\n            mouse : 0,\n            input : '',\n            checkBox : 0, \n            buttonUI : {rename: false, colour: {palette : false, button : false}, check: false, delete : false, description : true},\n            description : {showing : false, task : 1, content : 'description', modified : false},\n            priorityUpdateInfo : { draggedFrom : 0, draggedTo : 0}\n        }\n    }\n    taskComplete = () => {\n        var tasks =  JSON.parse(JSON.stringify(this.state.tasks))\n        var updates = []\n        for (let i in tasks){\n            if (tasks[i].selected){\n                updates.push({id:tasks[i].id,completed:!tasks[i].completed})\n                tasks[i].completed=!tasks[i].completed \n            }\n        }\n        var set = (tasks) => {\n            this.setState({\n                tasks : tasks\n            })    \n        }\n        this.props.update(updates,()=>{set(tasks)},'tasks/'+this.props.listId)\n    }\n    taskColour = e => {\n        var tasks = JSON.parse(JSON.stringify(this.state.tasks))\n        var colour = e.target.style.backgroundColor\n        var updates = []\n        for (let i in tasks){\n            if (tasks[i].selected){\n                updates.push({id:tasks[i].id,colour:colour})\n                tasks[i].colour=colour \n            }\n        }\n        var set = (tasks) => {\n            this.setState({\n                tasks : tasks\n            })    \n        }\n        this.props.update(updates,()=>{set(tasks)},'tasks/'+this.props.listId)\n    }\n    taskRename = (e, newname) => {\n        if(newname){\n            var tasks =  JSON.parse(JSON.stringify(this.state.tasks))\n            var updates = []\n            for (let i in tasks){\n                if (tasks[i].selected){\n                    updates.push({id:tasks[i].id,taskName:newname})\n                    tasks[i].name=newname\n                    break\n                }\n            }\n            var set = (tasks) => {\n                this.setState({\n                    tasks : tasks\n                })    \n            }\n            this.props.update(updates,()=>{set(tasks)},'tasks/'+this.props.listId)\n        } else {\n            var buttonUI =  JSON.parse(JSON.stringify(this.state.buttonUI))\n            var description = JSON.parse(JSON.stringify(this.state.description))\n            buttonUI.rename = !buttonUI.rename\n            description.showing = false\n            this.setState({\n                buttonUI : buttonUI,\n                description : description\n            })\n        }\n    }\n    inputHandle = e => {\n        this.setState({\n            input : e.target.value\n        })\n    }\n    selectTaskCheck = (tasks,buttonUI,count) => {\n        if (count>1){\n            var removeTag = true\n        }\n        if (count>=1){\n            var del = true\n            var check = true\n        }\n        var rename = removeTag ? false : this.state.buttonUI.rename\n        var firstCheck = true\n        for (let i in tasks){\n            if (tasks[i].selected){\n                if (firstCheck) {\n                    var first = tasks[i].completed\n                    firstCheck = false\n                } else {\n                    if (tasks[i].completed!=first){\n                        var check = false\n                        break\n                    }\n                }\n            }\n        } \n        if (count == 0) {\n            rename = check = del = false \n        }\n        buttonUI = {\n            rename: rename, \n            colour: this.state.buttonUI.colour, \n            check: check, \n            delete : del,\n            description : this.state.buttonUI.description\n        }\n        return {tasks : tasks, count : count, buttonUI : buttonUI}\n    }\n    selectTask = (e,priority) => {\n        e.stopPropagation()\n        var tasks =     JSON.parse(JSON.stringify(this.state.tasks))\n        var buttonUI =  JSON.parse(JSON.stringify(this.state.buttonUI))\n        if (tasks[priority].selected){\n            var count = this.state.checkBox-1\n        } else {\n            var count = this.state.checkBox+1\n        }\n        tasks[priority].selected = !tasks[priority].selected\n        var state = this.selectTaskCheck(tasks,buttonUI,count)\n        this.setState({\n            tasks : state.tasks,\n            checkBox : state.count,\n            buttonUI : state.buttonUI\n        })\n    }\n    setMouse = e => {\n        if(this.props.activeView == this.props.className && this.state.dragging){\n            this.setState({\n                mouse : {x : e.clientX, y : e.clientY}\n            },()=>{\n                if (this.state.draggedOver){\n                    var draggedOver = this.state.draggedOver.priority\n                    var dragging = this.state.dragging.priority\n                    var tasks= JSON.parse(JSON.stringify(this.state.tasks))\n    \n                    if (this.state.mouse.y < this.state.draggedOver.pos && dragging>draggedOver){\n                        delete tasks[dragging]\n                        tasks[draggedOver]=this.state.tasks[dragging]\n                        for(let i=parseInt(draggedOver)+1; i<=dragging; i++){\n                            tasks[i]=this.state.tasks[i-1]\n                        }\n                        this.setState({\n                            tasks : tasks,\n                            dragging : {priority : draggedOver, name : this.state.dragging.name},\n                            priorityUpdateInfo : {draggedFrom : this.state.priorityUpdateInfo.draggedFrom, draggedTo : draggedOver}\n                        })\n                    } else if (this.state.mouse.y > this.state.draggedOver.pos && dragging<draggedOver){ \n                        delete tasks[dragging]\n                        tasks[draggedOver]=this.state.tasks[dragging]\n                        for(let i=draggedOver-1; i>=dragging; i--){\n                            tasks[i]=this.state.tasks[i+1]\n                        }\n                        this.setState({\n                            tasks : tasks,\n                            dragging : {priority : draggedOver, name : this.state.dragging.name},\n                            priorityUpdateInfo : {draggedFrom : this.state.priorityUpdateInfo.draggedFrom, draggedTo : draggedOver}\n                        })\n                    }   \n                }\n            })\n        }\n    }\n    dragStart = (e,priority,name) => {\n        this.setState ({\n            dragging : {priority,name},\n            mouse : {x : e.clientX, y : e.clientY},\n            priorityUpdateInfo : {draggedFrom : priority, draggedTo : priority}\n        })\n    }\n    mouseUpFix = e =>{\n        e.stopPropagation()\n        if(this.state.dragging){\n            this.setState({\n                dragging : null,\n                draggedOver : null,\n                mouse : 0\n            }) \n        }\n    }\n    taskOrderUpdate = () => {\n        var fromTo = JSON.parse(JSON.stringify(this.state.priorityUpdateInfo))\n        var tasks = JSON.parse(JSON.stringify(this.state.tasks))\n        if (fromTo.draggedFrom==fromTo.draggedTo) {\n            return\n        }\n        var higher = Math.max(fromTo.draggedFrom,fromTo.draggedTo)\n        var lower = Math.min(fromTo.draggedFrom,fromTo.draggedTo)\n        var updates = []\n        for (let i=lower;i<=higher;i++){\n            updates.push({id:tasks[i].id,priority:i})\n        }\n        this.props.update(updates,()=>null,'tasks/'+this.props.listId)\n    }\n    drop = e => {\n        if(!this.state.dragging){\n            this.closeOptions()\n        } else {\n            this.taskOrderUpdate()\n            this.setState({\n                dragging : null,\n                draggedOver : null,\n                mouse : 0,\n                priorityUpdateInfo : { draggedFrom : 0, draggedTo : 0}\n            })  \n        }\n    }\n    dragOver = (e,priority) => {\n        if(this.state.dragging){\n            var box = e.target.getBoundingClientRect()\n            var pos = box.bottom - box.height/2\n            this.setState({\n                draggedOver: {priority : priority, pos : pos}\n            })\n        }\n    }    \n    fixPriority = tasks => {\n        var count = 0\n        var priority = {} \n        var idArr = []\n        for(let i in tasks){\n            if (i!=count){\n                tasks[count]=tasks[i]\n                delete tasks[i]\n                idArr.push(tasks[count].id)\n                priority[tasks[count].id]=count\n            }\n            count++\n        }\n        return { tasks : tasks, idArr : idArr, priority: priority}\n    }\n    taskDelete = ()=> {\n        var taskIds = []\n        var taskKeys = []\n        var tasks =  JSON.parse(JSON.stringify(this.state.tasks))\n        var description = JSON.parse(JSON.stringify(this.state.description))\n        for (let i in tasks){\n            if (tasks[i].selected){\n                taskIds.push(tasks[i].id)\n                taskKeys.push(i)\n            }\n        }\n        var buttonUI =  JSON.parse(JSON.stringify(this.state.buttonUI))\n        var count = this.state.checkBox-taskKeys.length\n        for (let i of taskKeys){\n            if(i == this.state.description.task.priority){\n                description = {showing : false, task : 1, content : 'description', modified : false}\n            }\n            delete tasks[i]\n        }\n        var updated = this.fixPriority(tasks)\n        tasks = updated.tasks\n        var state = this.selectTaskCheck(tasks,buttonUI,count)\n        var priorityUpdate = []\n        for (let i in updated.priority){\n            priorityUpdate.push({id:i,priority:updated.priority[i]})\n        }\n        var xhr = new XMLHttpRequest()\n        xhr.open('DELETE','http://localhost:8000/api/tasks/'+this.props.listId+'/')\n        xhr.setRequestHeader('content-type','application/json')\n        xhr.setRequestHeader('X-CSRFTOKEN',Cookies.get('csrftoken'))\n        xhr.onload = () => {\n            if (xhr.status == 204){\n                this.setState({\n                    tasks: state.tasks,\n                    checkBox: state.count,\n                    buttonUI: state.buttonUI,\n                    description: description\n                })\n            } \n        }\n        xhr.send(JSON.stringify({delete:taskIds, update:priorityUpdate}))\n    } \n    taskCreate = () => { //remember to takeout cors middleware\n        for (let i of Object.values(this.state.tasks)) {\n            if (i.name==this.state.input) {return}\n        }\n        var xhr = new XMLHttpRequest()\n        xhr.open('POST','http://localhost:8000/api/tasks/'+this.props.listId+'/')\n        xhr.setRequestHeader('content-type','application/json')\n        xhr.setRequestHeader('X-CSRFTOKEN',Cookies.get('csrftoken'))\n        xhr.onload = () => {\n            if (xhr.status == 201){\n                var response = JSON.parse(xhr.response)\n                this.setState({\n                    tasks : { ...this.state.tasks, [response.priority] : {id : response.id, colour : response.colour, description : '', selected : false, name : response.taskName}},\n                    input : ''\n                })\n            }\n        }\n        var priority=0\n        if (this.state.tasks['0']){\n            priority=parseInt(Object.keys(this.state.tasks).slice(-1)[0])+1//pop\n        }\n        xhr.send(JSON.stringify({listId : this.props.listId, taskName : this.state.input, priority : priority}))\n    }\n    colourPalette = () => {\n        var buttonUI =  JSON.parse(JSON.stringify(this.state.buttonUI))\n        var description = JSON.parse(JSON.stringify(this.state.description))\n        description.showing = false\n            buttonUI.colour.palette = !buttonUI.colour.palette\n            this.setState({\n                buttonUI : buttonUI,\n                description : description\n            })\n    }\n    openDescription = (e,priority) =>{\n        if(this.state.description.showing && priority == this.state.description.task.priority){\n            this.closeDescription()\n            return\n        }\n        var task = JSON.parse(JSON.stringify(this.state.tasks[priority]))\n        var buttonUI = JSON.parse(JSON.stringify(this.state.buttonUI))\n        buttonUI.description = true\n        buttonUI.rename = false\n        buttonUI.colour.palette = false\n        task.priority = priority\n        var description = {\n            showing : true,\n            task : task,\n            content : task.description,\n            modified : false\n        }\n        this.setState({\n            buttonUI : buttonUI,\n            description : description\n        })\n    }\n    closeDescription = () => {\n        var description = JSON.parse(JSON.stringify(this.state.description))\n        var buttonUI = JSON.parse(JSON.stringify(this.state.buttonUI))\n        buttonUI.description = true\n        description.showing = false\n        description.modified = false\n        description.content = description.task.description\n        this.setState({\n            buttonUI : buttonUI,\n            description : description\n        })\n    }\n    editDescription = e =>{\n        this.textArea.current.focus()\n        var buttonUI = JSON.parse(JSON.stringify(this.state.buttonUI))\n        buttonUI.description = !buttonUI.description\n        this.setState({\n            buttonUI : buttonUI\n        })\n    }\n    saveNewDescription = e =>{\n        var description = JSON.parse(JSON.stringify(this.state.description))\n        var buttonUI = JSON.parse(JSON.stringify(this.state.buttonUI))\n        var tasks = JSON.parse(JSON.stringify(this.state.tasks))\n        var update = [{\n            id:description.task.id,\n            description:description.content\n        }]\n        description.modified = false\n        buttonUI.description = !buttonUI.description\n        tasks[description.task.priority].description=description.content\n        var set = (tasks,buttonUI,description) => {\n            this.setState({\n                tasks : tasks,\n                buttonUI : buttonUI,\n                description : description\n            })\n        }\n        this.props.update(update,()=>{set(tasks,buttonUI,description)},'tasks/'+this.props.listId)\n    }\n    changeDescription = e =>{\n        var description = JSON.parse(JSON.stringify(this.state.description))\n        description.content = e.target.value\n        description.modified = true\n        this.setState({\n            description : description\n        })\n    }\n    closeOptions = e =>{\n        var buttonUI = JSON.parse(JSON.stringify(this.state.buttonUI))\n        var description = JSON.parse(JSON.stringify(this.state.description))\n        buttonUI.rename = false\n        buttonUI.colour.palette = false\n        description.showing = false\n        this.setState({\n            buttonUI : buttonUI,\n            description : description\n        })\n    }\n    componentDidUpdate(){\n        if (this.props.activeView == this.props.className && !this.state.tasksLoaded) {\n            let xhr = new XMLHttpRequest()\n            xhr.open('GET','http://localhost:8000/api/tasks/'+this.props.listId)\n            xhr.setRequestHeader('content-type','application/json')\n            xhr.responseType = 'json'\n            xhr.onload = () => {\n                if (xhr.status == 200) {\n                    let tasks = {}\n                    xhr.response.map(task => {\n                        tasks[task.priority]={\n                            id : task.id, \n                            colour : task.colour, \n                            description : task.description, \n                            selected : false, \n                            name : task.taskName,\n                            completed : task.completed\n                        }\n                    })\n                    this.setState({\n                        tasks : tasks,\n                        tasksLoaded : true,\n                    })\n                }\n            }\n            xhr.send()\n        }\n    }\n    inputStyle = {\n        width:'235px',\n        fontSize: '14px', \n        maxWidth: '235px', \n        maxHeight: '32px'\n    }\n    buttonsStyle = {\n        marginLeft : '255px', \n        position : 'absolute', \n        marginTop : '10px'\n    }\n    ghostDiv = {\n        position: 'relative', \n        height : '34px', \n        pointerEvents : 'none', \n        marginBottom:'10px'\n    }\n    descriptionContainer = {\n        position: 'absolute',\n        left: '400px',\n        top:'140px', \n        height:'100%'\n    }\n    descriptionStyle = {\n        position:'sticky',\n        top:0,\n        left:0,\n        maxWidth:'300px',\n        backgroundColor: 'rgba(255,255,255,0.5)',\n        overflow:'hidden',\n    }\n    textAreaStyle = {\n        color : 'rgba(0,0,0,1)',\n        display : 'block',\n        border : 'none',\n        backgroundColor : 'rgba(0,0,0,0)',\n        resize : 'none'\n    }\n    closeDescriptionStyle = {\n        marginTop:'-2px',\n        marginRight:'3px',\n        float:'right', \n        cursor:'pointer', \n        opacity:0.3\n    }\n    render(){ \n        var disabled = true\n        if (this.state.checkBox!=1) {\n                disabled = false\n        }\n        var styling = {margin : '50px', width: '90%', height:'90%'}\n        var ref = 'none'\n        if (this.props.activeView != this.props.className) {\n            styling.display = 'none'\n        } else {\n            ref=this.props.reference\n        }\n        var show = 'none'\n        if (this.state.description.showing){\n            show = 'block'\n        }\n        if (this.state.description.task.priority){\n            var taskLabel = { backgroundColor : this.state.description.task.colour}\n        }\n        var modified = this.state.description.modified ? <span style={{color:'red'}}>(modified)</span> : null\n        var descriptionStyle = Object.assign({display : show},{...this.descriptionStyle})\n        var tasks=[]\n        for (let i in this.state.tasks){\n            tasks.push(    \n                <div key={this.state.tasks[i].name}>\n                    <Task  \n                        mouseUpFix={this.mouseUpFix}\n                        openDescription={this.openDescription}\n                        completed={this.state.tasks[i].completed}\n                        colour={this.state.tasks[i].colour}\n                        selected={this.state.tasks[i].selected}\n                        selectTask={this.selectTask}\n                        listId={this.props.listId}\n                        dragOver={this.dragOver}\n                        dragging={this.state.dragging}\n                        mouse={this.state.mouse}\n                        dragStart={this.dragStart}\n                        name={this.state.tasks[i].name}\n                        id={this.state.tasks[i].id}\n                        priority={i}\n                    /> \n                </div>\n            ) \n        }\n        return (\n            <div style={styling} ref={ref}\n                onMouseMove={this.setMouse} \n                onClick={e=>e.stopPropagation()}\n                onMouseUp={this.drop} \n                className={this.props.className}>\n                <span style={{position : 'absolute'}}> \n                    <input key=\"taskCreationInput\" \n                        maxLength={40}\n                        style={this.inputStyle}\n                        onChange={this.inputHandle} \n                        value={this.state.input}/>\n                    <button onClick={this.taskCreate}>create</button>\n                </span>\n                <div style={this.ghostDiv}/>\n                <span style={this.buttonsStyle}>\n                    <ViewButton_s symbol={'✍'} disabled={disabled} \n                        func={this.taskRename} \n                        mouseUpFix={this.mouseUpFix}\n                        renameUI={this.state.buttonUI.rename}/>    \n                    <ViewButton_s img={'/static/colour.png'} \n                        checkBox={this.state.checkBox}\n                        editViewColour={this.props.editViewColour} \n                        className={this.props.className}\n                        func={this.colourPalette} \n                        mouseUpFix={this.mouseUpFix}\n                        update={this.taskColour} \n                        updateList={this.props.updateList}\n                        listId={this.props.listId}\n                        disabled={true}\n                        colourUI={this.state.buttonUI.colour.palette}/>\n                    <ViewButton_s symbol={'✔'} \n                        func={this.taskComplete} \n                        mouseUpFix={this.mouseUpFix}\n                        disabled={this.state.buttonUI.check}/> \n                    <ViewButton_s img={'/static/delete.png'} l='7px' \n                        func={this.taskDelete} \n                        mouseUpFix={this.mouseUpFix}\n                        disabled={this.state.buttonUI.delete}/> {/* need better trash icon */}\n                </span>\n                    {tasks}\n\n                <span style={this.descriptionContainer}>    \n                    <div style={descriptionStyle} onClick={e=>e.stopPropagation()} onMouseUp={e=>e.stopPropagation()}>\n                        <span style={taskLabel}>\n                            {this.state.description.task.name}\n                            <span style={this.closeDescriptionStyle} \n                                onClick={this.closeDescription}>\n                                x\n                            </span>\n                        </span>\n                        {modified}\n                        <textarea value={this.state.description.content} \n                            maxLength={250}\n                            ref={this.textArea}\n                            style={this.textAreaStyle} \n                            readOnly={this.state.buttonUI.description}\n                            onChange={this.changeDescription}/>           \n                        <ViewButton_s symbol={'✍'} \n                            func={this.editDescription} \n                            save={this.saveNewDescription}\n                            style={{float:'right', margin:'-10px'}}\n                            disabled={'true'} \n                            descriptionUI={!this.state.buttonUI.description}/>\n                    </div>\n                </span>\n            </div>\n        )//tick, editname, delete, colour\n    } \n}\n","import React, { Component } from 'react'\nimport CheckBox from './CheckBox'\n\nexport default class ListButtons extends Component {\n    constructor(props) {\n        super(props)\n    }\n//animation when tab is created to show where it is\n//queue animation: when oppened or is already opened, \n\n    styling = {\n        display : 'block',\n        position : 'relative',\n        marginTop : '20px',\n        userSelect: 'none',\n        width : '250px',\n        height : '50px',\n        textAlign : 'center',\n    }\n\n    render() {\n        var check = this.props.selected ? '✔' : ''      \n        var styling = Object.assign({backgroundColor : this.props.colour},{...this.styling})\n        return (\n            <div style={styling} \n                onClick={(e)=>this.props.openNavTab(this.props.name,this.props.colour,this.props.id)}>\n                <CheckBox\n                    position={'absolute'}\n                    top={'50%'}\n                    left={'15px'} \n                    priority={this.props.id}\n                    preventPropogation={e=>e.stopPropagation()}\n                    select={this.props.selectList}\n                    check={check}/>\n                <span style={{lineHeight : '50px', pointerEvents : 'none'}}>{this.props.name}</span>\n            </div>\n        )//priority={this.props.priority}\n    }\n}","import React, { Component } from 'react'\nimport ListButtons from './ListButtons'\nimport ViewButton_s from './ViewButton(sidebar)'\nimport Cookies from 'js-cookie'\nexport default class ListView extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            lists : {},\n            buttonUI : {rename: false, colour: {palette : false, button : false},delete : false},\n            listsLoaded : false,\n            checkBox : 0,\n            input : '',\n            \n        }\n    }\n    inputHandle = e => {\n        this.setState({\n            input : e.target.value\n        })\n    }\n    listColour = (e,id) => {\n        var lists = JSON.parse(JSON.stringify(this.state.lists))\n        var nameArr = []\n        var colour = e.target.style.backgroundColor\n\n        var updates =[]\n        if(id){\n            updates.push({id:id,colour:colour})\n            lists[id].colour = colour\n            nameArr.push(lists[id].name)\n        } else {\n            for (let i in lists){\n                if (lists[i].selected){\n                    updates.push({id:i,colour:colour})\n                    lists[i].colour=colour\n                    nameArr.push(lists[i].name)\n                }\n            }\n        }\n        var set = (lists) => {\n            this.setState({\n                lists : lists\n            },()=>this.props.editViewColour(nameArr,colour))    \n        }\n        this.props.update(updates,()=>{set(lists)},'lists')\n    }\n    colourPalette = () => {\n        var buttonUI =  JSON.parse(JSON.stringify(this.state.buttonUI))\n            buttonUI.colour.palette = !buttonUI.colour.palette\n            this.setState({\n                buttonUI : buttonUI\n            })\n    }\n    listRename = (e, newname) => {\n        if(newname){\n            var updates = []\n            var lists =  JSON.parse(JSON.stringify(this.state.lists))\n            for (let i in lists){\n                if (lists[i].selected){\n                    updates.push({id:i,listName:newname})\n                    lists[i].name=newname\n                    break\n                }\n            }\n            var set = (lists) => {\n                this.setState({\n                    lists : lists\n                })    \n            }\n            this.props.update(updates,()=>{set(lists)},'lists')\n        } else {\n            var buttonUI =  JSON.parse(JSON.stringify(this.state.buttonUI))\n            buttonUI.rename = !buttonUI.rename\n            this.setState({\n                buttonUI : buttonUI,\n            })\n        }\n    }\n    listCreate = e => {\n        for (let i of Object.values(this.state.lists)) {\n            if (i.name==this.state.input) {return}\n        }\n        //if (!this.state.lists(list => list.name == value) && /\\S/.test(value))\n            var xhr = new XMLHttpRequest()\n            xhr.open('POST','http://localhost:8000/api/lists/')\n            xhr.setRequestHeader('content-type','application/json')\n            xhr.setRequestHeader('X-CSRFTOKEN',Cookies.get('csrftoken'))\n            xhr.onload = () => {\n                if (xhr.status == 201){\n                    var response = JSON.parse(xhr.response)\n                    var lists = JSON.parse(JSON.stringify(this.state.lists))\n                    lists[response.id]={                            \n                        name : response.listName,\n                        colour : response.colour,\n                        selected : false\n                    }\n                    this.setState({\n                        lists : lists,\n                        input : ''\n                    })\n                }\n            }\n            xhr.send(JSON.stringify({listName : this.state.input}))\n    }\n    deleteList = ()=> {\n        var listIds = []\n        var lists =  JSON.parse(JSON.stringify(this.state.lists))\n        var buttonUI =  JSON.parse(JSON.stringify(this.state.buttonUI))\n        for (let i in lists){\n            if (lists[i].selected){\n                listIds.push(i)\n            }\n        }\n        var count = this.state.checkBox-listIds.length\n        var state = this.selectListCheck(buttonUI,count)\n        var xhr = new XMLHttpRequest()\n        xhr.open('DELETE','http://localhost:8000/api/lists/')\n        xhr.setRequestHeader('content-type','application/json')\n        xhr.setRequestHeader('X-CSRFTOKEN',Cookies.get('csrftoken'))\n        xhr.onload = () => {\n            console.log(xhr.status)\n            if (xhr.status == 204){\n                    for (let i of listIds){\n                        this.props.closeNavTab(null,lists[i].name)\n                        delete lists[i]\n                    }\n                    this.setState({\n                        buttonUI: state.buttonUI,\n                        checkBox: state.count,\n                        lists: lists,\n                    })\n                } \n            }\n        xhr.send(JSON.stringify(listIds))\n    }\n    selectListCheck = (buttonUI,count) => {\n        var palette = this.state.buttonUI.colour.palette\n        if (count>1){\n            var removeTag = true\n        }\n        if (count>=1){\n            var del = true\n            var colour = true\n        }\n        if (count == 0) {\n            palette = rename = del = false \n        }\n        var rename = removeTag ? false : this.state.buttonUI.rename\n        buttonUI = {\n            rename: rename, \n            colour: {colour : colour, palette : palette},\n            delete : del,\n        }\n        return{count:count,buttonUI:buttonUI}\n    }\n    selectList = (e,id) => {\n        e.stopPropagation()\n        var lists =     JSON.parse(JSON.stringify(this.state.lists))\n        var buttonUI =  JSON.parse(JSON.stringify(this.state.buttonUI))\n        if (lists[id].selected){\n            var count = this.state.checkBox-1\n        } else {\n            var count = this.state.checkBox+1\n        }\n        \n        lists[id].selected = !lists[id].selected\n        var state = this.selectListCheck(buttonUI,count)\n        this.setState({\n            lists : lists,\n            checkBox : state.count,\n            buttonUI : state.buttonUI\n        })\n    }\n    componentDidMount(){\n        if (!this.state.listsLoaded) {\n            let xhr = new XMLHttpRequest()\n            xhr.open('GET','http://localhost:8000/api/lists/')\n            xhr.setRequestHeader('content-type','application/json')\n            xhr.responseType = 'json'\n            xhr.onload = () => {\n                if (xhr.status == 200) {\n                    let lists = {}\n                    xhr.response.map(list => {\n                        lists[list.id]={\n                            name : list.listName,\n                            colour : list.colour,\n                            selected : false\n                        }\n                    }\n                )\n                    this.setState({\n                        lists : lists,\n                        tasksLoaded : true\n                    })\n                }\n            }\n            xhr.send()\n            this.props.passFunction(this.listColour)\n        }\n    }\n    closeOptions = e =>{\n        var buttonUI = JSON.parse(JSON.stringify(this.state.buttonUI))\n        buttonUI.rename = false\n        buttonUI.colour.palette = false\n        this.setState({\n            buttonUI : buttonUI,\n        })\n    }\n    buttonsStyle = {\n        left : '305px', \n        position : 'absolute', \n        marginTop : '10px',\n        top : '130px'\n    }\n    render(){\n        var disabled = true\n        if (this.state.checkBox!=1) {\n                disabled = false\n        }\n        var styling = {margin : '50px', width:'90%' , height:'90%'}\n        var ref = 'none'\n        if (this.props.activeView != this.props.className) {\n            styling.display = 'none'\n        } else {\n            ref=this.props.reference\n        }\n        var buttons = []\n        for (let i in this.state.lists){\n            buttons.push(                \n                <ListButtons \n                    colour={this.state.lists[i].colour}\n                    selectList={this.selectList}\n                    selected={this.state.lists[i].selected}\n                    openNavTab={this.props.openNavTab} \n                    name={this.state.lists[i].name} \n                    id={i} \n                    />)\n        }\n        return (\n            <div style={styling}  ref = {ref}\n                onClick={this.closeOptions}\n                className={this.props.className}>\n                <input style={{width:'235px'}} maxLength={25} onChange={this.inputHandle} value={this.state.input}/><button onClick={this.listCreate}>create</button>\n                {buttons}\n                <span style={this.buttonsStyle}>\n                    <ViewButton_s symbol={'✍'} disabled={disabled} \n                        func={this.listRename} \n                        renameUI={this.state.buttonUI.rename}/>    \n                    <ViewButton_s img={'/static/colour.png'} \n                        listView={true}\n                        checkBox={this.state.checkBox}\n                        className={this.props.className}\n                        func={this.colourPalette}\n                        update={this.listColour}\n                        disabled={this.state.buttonUI.colour.colour} \n                        colourUI={this.state.buttonUI.colour.palette}/>\n                    <ViewButton_s img={'/static/delete.png'} l='7px' \n                        func={this.deleteList} \n                        disabled={this.state.buttonUI.delete}/> {/* need better trash icon */}\n                </span>\n            </div>\n        )\n    }\n}\n/*\nupdate\ntaskColour\ntaskRename\ndeleteTask\ncolourPalette\ncloseOptions\nselectTask\n*/","import React, {Component} from 'react'\n\nexport default class Registration extends Component {\n    constructor(props){\n        super(props)\n            this.state = {\n                view : 'login',\n                loginUser : '',\n                loginPass : '',\n                registerUser : '',\n                registerPass : '',\n                registerPass2 : '',\n                inputErrors : []\n            }\n    }\n    errorHandle(response){\n        var inputErrors=[]\n        for (let i in response){\n            inputErrors.push({[i]:response[i]})\n        }\n        this.setState({\n            inputErrors:inputErrors\n        })\n    }\n    frontEndRegisterCheck(){\n        var inputErrors=[]\n        var state = this.state\n        if (state.registerUser == ''){\n            inputErrors.push({username:'This field should not be empty'})\n        }\n        if (state.registerPass != state.registerPass2){\n            inputErrors.push({password:'Password fields do not match'})\n            inputErrors.push({password2:'Password fields do not match'})\n        } else {\n            if (state.registerPass == ''){\n                inputErrors.push({password:'This field should not be empty'})\n            }\n            if (state.registerPass2 == ''){\n                inputErrors.push({password2:'This field should not be empty'})\n            }\n        }\n        this.setState({\n            inputErrors : inputErrors\n        })\n        return !inputErrors.length\n    }\n    frontEndLoginCheck(){\n        var inputErrors=[]\n        var state = this.state\n        if (state.loginUser == ''){\n            inputErrors.push({username:'This field should not be empty'})\n        }\n        if (state.loginPass == ''){\n            inputErrors.push({password:'This field should not be empty'})\n        }\n        this.setState({\n            inputErrors : inputErrors\n        })\n        return !inputErrors.length\n    }\n    register = e => {\n        if(this.frontEndRegisterCheck()){\n            var xhr = new XMLHttpRequest()\n            xhr.open('POST','http://localhost:8000/register/')\n            xhr.setRequestHeader('content-type','application/json')\n            xhr.onload = () => {\n                console.log('response:',xhr.response,'status:',xhr.status)\n                this.errorHandle(JSON.parse(xhr.response))\n            }\n            xhr.send(JSON.stringify({username: this.state.registerUser, password: this.state.registerPass, password2: this.state.registerPass2}))\n        }\n    }\n    login = () => {\n        if(this.frontEndLoginCheck()){\n            this.props.login(\n                this.state.loginUser,\n                this.state.loginPass,\n                response=>this.errorHandle(response)\n                )\n        }\n    }\n\n    loginUserHandle = e => {\n        e.target.style.borderColor = 'none'\n        this.setState({\n            loginUser : e.target.value\n        })      \n    }\n    loginPassHandle = e => {\n        e.target.style.borderColor = 'none'\n        this.setState({\n            loginPass : e.target.value\n        })\n    }\n    registerUserHandle = e => {\n        e.target.style.borderColor = 'none'\n        this.setState({\n            registerUser : e.target.value\n        })\n    }\n    registerPassHandle = e => {\n        e.target.style.borderColor = 'none'\n        this.setState({\n            registerPass : e.target.value\n        })\n    }\n    registerPass2Handle = e => {\n        e.target.style.borderColor = 'none'\n        this.setState({\n            registerPass2 : e.target.value\n        })\n    }\n    tabClick = e => {\n        if (e.target.innerText != this.state.view){\n            this.setState({\n                view : e.target.innerText,\n                loginUser : '',\n                loginPass : '',\n                registerUser : '',\n                registerPass : '',\n                registerPass2 : '',\n                inputErrors : []\n            })\n        }\n    }\n    container = {\n        color: 'white',\n        display:'grid',\n        position : 'absolute',\n        alignItems : 'center',\n        justifyItems : 'center',\n        margin : '0 auto',\n        top: '50%',\n        left:'50%',\n        transform: 'translateY(-50%) translateX(-50%) scale(1.25)',\n        backgroundColor : '#676768',\n        border : '20px solid #676768',\n        borderBottomLeftRadius : '20px',\n        borderBottomRightRadius : '20px',\n        width : '300px',\n        height : '200px',\n    }\n    nav = {\n        fontSize : '80%',\n        display : 'grid',\n        gridTemplateColumns : '50% 50%',\n        textAlign : 'center',\n        position : 'absolute',\n        borderTopRightRadius : '20px',\n        borderTopLeftRadius : '20px',\n        top : -35,\n        width : '340px',\n        height : '25px',\n        backgroundColor :  '#676768',\n        overflow:'hidden'\n    }\n    errorMessage = {\n        padding:'3px',\n        whiteSpace: 'nowrap',\n        fontSize : '70%',\n        color:'white',\n        left:'270px',\n        position:'absolute',\n        boxShadow:'0px 0px 5px rgba(255,255,255,0.9)',\n        marginTop:'7px',\n        backgroundColor: '#777777',\n        borderRadius:'5px'\n    }\n    loginTab = {\n        lineHeight : '25px',\n    }\n    registerTab = {\n        lineHeight : '25px',\n    }    //stylecomponents\n    render(){\n        //console.log(this.state.inputErrors)\n        var errorUsername, errorPassword, errorPassword2\n        var userInputStyle = {boxShadow : 'none'}\n        var passInputStyle = {boxShadow : 'none'}\n        var pass2InputStyle = {boxShadow : 'none'}\n        if (this.state.inputErrors.length){\n            for (let i of this.state.inputErrors){\n                if (i['username']){\n                    userInputStyle['boxShadow'] = '0px 0px 5px rgba(255,0,0,0.9)'\n                    errorUsername = <span style={this.errorMessage}>{i['username']}</span>\n                    \n                }\n                if (i['password']){\n                    passInputStyle['boxShadow'] = '0px 0px 5px rgba(255,0,0,0.9)'\n                    errorPassword = <span style={this.errorMessage}>{i['password']}</span>\n                }\n                if (i['password2']){\n                    pass2InputStyle['boxShadow'] = '0px 0px 5px rgba(255,0,0,0.9)'\n                    errorPassword2 = <span style={this.errorMessage}>{i['password2']}</span>\n                }\n            }\n        }\n        if (this.state.view == 'login') {\n            var loginStyle = this.loginTab\n            var registerStyle = Object.assign({\n                backgroundColor : 'rgba(255,255,255,0.1)', \n                cursor : 'pointer'\n            },{...this.registerTab})\n\n            var view = <>\n                Username<span><input key='logUser' style={userInputStyle} onChange={this.loginUserHandle}/>{errorUsername}</span>\n                Password<span><input key='logPass' style={passInputStyle} onChange={this.loginPassHandle} type={'password'}/>{errorPassword}</span>\n                <button onClick={this.login}>login</button>\n            </>\n        } else {\n            var loginStyle = Object.assign({\n                backgroundColor : 'rgba(255,255,255,0.1)', \n                cursor : 'pointer'\n            },{...this.loginTab})\n            var registerStyle = this.registerTab \n\n            var view =  <>\n                Username<span><input key='regUser' style={userInputStyle} onChange={this.registerUserHandle}/>{errorUsername}</span>\n                Password<span><input key='regPass' style={passInputStyle} onChange={this.registerPassHandle} type={'password'}/>{errorPassword}</span>\n                Confirm Password<span><input key='regPass2' style={pass2InputStyle} onChange={this.registerPass2Handle} type={'password'}/>{errorPassword2}</span>\n                <button onClick={this.register}>create</button>\n            </>\n        }\n        return( \n            <div style={this.container}>\n                <div style={this.nav}>\n                        <span onClick={this.tabClick} style={registerStyle}>register</span>\n                        <span onClick={this.tabClick} style={loginStyle}>login</span>\n                </div>\n                {view}\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport NavBar from './components/NavBar'\nimport View from './components/View.js'\nimport ListView from './components/ListView.js'\nimport Registration from './components/Registration.js'\nimport Cookies from 'js-cookie'\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.activeViewContainer = React.createRef()\n    this.state = {\n      views : {},\n      colour : '#079d41',\n      activeView : 'Lists',\n      loggedIn : false,\n      user : {},\n      func : null,\n    }\n  }\n  login = (username,password,callback) => {\n    var xhr = new XMLHttpRequest()\n    xhr.open('POST','http://localhost:8000/login/')\n    xhr.setRequestHeader('content-type','application/json')\n    xhr.onload = () => {\n      console.log(xhr.response)\n      if (xhr.response == '\"Success\"') {\n        localStorage.setItem('loggedIn', true)\n        this.setState ({\n          loggedIn : true\n        })\n      } else {\n        callback(JSON.parse(xhr.response))\n      } \n      //setstate loggedin true, user {id and name?}\n    }\n    xhr.send(JSON.stringify({username: username, password: password}))\n  }\n  passFunction = func => {\n    this.setState({\n      func : func\n    })\n  }\n  failSafe = (ref) => {\n    if(ref.current){\n      if(this.state.activeView == 'Lists'){\n        ref.current.click()\n      } else {\n        var mouseUp = document.createEvent('MouseEvents')\n        mouseUp.initEvent('mouseup',true,true)\n        ref.current.dispatchEvent(mouseUp)\n      }\n    }\n  }\n\n  changeView = (name, colourCode) => {\n    //this worked for some reason -> this.state.activeView = e.target.id\n    this.setState({\n      activeView : name,\n      colour : colourCode\n    })\n  }\n\n  editViewColour = (nameArr, colourCode) => {\n    var views = JSON.parse(JSON.stringify(this.state.views))\n    var colour = this.state.colour\n    if (this.state.activeView == nameArr){\n      colour = colourCode\n    }\n    for (let i of nameArr){\n      if (views[i]){\n        views[i].colourCode = colourCode\n      }\n    }\n    this.setState({\n      views : views,\n      colour : colour\n    })\n  }\n\n  openNavTab = (name, colourCode, listId) => {\n    if (this.state.views[name]){\n      return\n    }\n    var views = JSON.parse(JSON.stringify(this.state.views))\n    views[name]={colourCode: colourCode, listId : listId}\n    this.setState({\n        views : views\n    })\n  }\n\n  closeNavTab = (e,list) => {\n    if(e){\n      e.stopPropagation()\n      var name = e.target.parentNode.className\n    } else {\n      var name=list\n    }\n    var views = JSON.parse(JSON.stringify(this.state.views))\n    if (views[name]){\n      delete views[name]\n      this.setState ({\n        views: views\n      },() =>{\n        if(!this.state.views.length){\n          this.changeView('Lists','#079d41')\n        } else {      \n          let viewKey = Object.keys(this.state.views).slice(-1)[0]\n          this.changeView(viewKey,this.state.views[viewKey].colourCode)\n        } \n      })\n    }\n  }\n  update = (update,callback,path) => {\n    var xhr = new XMLHttpRequest()\n    xhr.open('PATCH','http://localhost:8000/api/'+path+'/')\n    xhr.setRequestHeader('content-type','application/json')\n    xhr.setRequestHeader('X-CSRFTOKEN',Cookies.get('csrftoken'))\n    xhr.onload = () => { \n        if (xhr.status == 206){\n            callback()\n            }\n        }\n    xhr.send(JSON.stringify(update))\n}\n\n  componentWillMount(){\n    document.documentElement.style.height = '100%'\n    document.body.style.height = '100%'\n    document.getElementById('root').style.height='90%'\n    if (!this.state.loggedIn && localStorage.getItem('loggedIn') == \"true\"){\n      this.setState({\n        loggedIn : true\n      })\n    }\n  }\n  render() {\n    document.body.style.backgroundColor = this.state.colour\n    if (this.state.loggedIn){\n      var logout = <a style={{color:'black'}}\n        onClick = {()=>localStorage.setItem('loggedIn', false)}\n        href='http://localhost:8000/logout'>logout</a>\n      var views=[]\n      for (let i in this.state.views){\n        views.push(\n        <View className={i} \n          key={i}\n          reference={this.activeViewContainer}\n          listId={this.state.views[i].listId}\n          update={this.update}\n          updateList={this.state.func} \n          activeView={this.state.activeView}/>\n        )\n      }\n      var show = [<NavBar views={this.state.views} \n        closeNavTab={this.closeNavTab} \n        changeView={this.changeView}\n        activeView={this.state.activeView}/>,\n    \n        <div style={{minHeight:'90%'}} id='views'\n          onClick={()=>this.failSafe(this.activeViewContainer)}>\n          <ListView className='Lists'\n            reference={this.activeViewContainer}\n            update={this.update}\n            closeNavTab={this.closeNavTab}\n            openNavTab={this.openNavTab} \n            editViewColour={this.editViewColour} \n            passFunction={this.passFunction}\n            activeView={this.state.activeView}/>\n          {views}\n        </div>]\n    } else {\n      var show = <Registration login={this.login}/>\n    }\n    \n    return ( \n      <>\n        {show}\n        {logout}\n      </>\n    )\n  }\n}\n\nexport default App;\n    //https://htmlcolorcodes.com/\n    //https://scriptverse.academy/tutorials/reactjs-update-array-state.html\n    //https://stackoverflow.com/questions/37435334/correct-way-to-push-into-state-array\n    //https://www.iconarchive.com\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}