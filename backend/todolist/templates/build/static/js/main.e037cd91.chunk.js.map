{"version":3,"sources":["components/NavTab.js","components/ListsTab.js","components/NavBar.js","components/TaskButton.js","components/CheckBox.js","components/Task.js","components/ViewButton(sidebar).js","components/ViewButton.js","components/View.js","components/ListButtons.js","components/ListView.js","components/Registration.js","App.js","serviceWorker.js","index.js"],"names":["NavTab","props","xstyle","fontSize","color","styling","cursor","display","backgroundColor","this","colourCode","paddingTop","paddingBottom","width","marginLeft","horizontalAlign","textAlign","activeView","className","filter","length","text","slice","style","onClick","e","changeView","target","closeNavTab","Component","ListsTab","transitionDuration","state","onMouseOver","hover","onMouseLeave","hoverLeave","NavBar","barStyle","tabs","i","views","push","changeColour","TaskButton","height","buttonFunctions","onMouseDown","symbol","CheckBox","preventPropogation","onMouseUp","mouseUpFix","select","priority","userSelect","lineHeight","position","top","transform","left","border","check","Task","changeTaskColour","setState","taskColour","value","stopPropagation","dragging","textShadow","hoverEnd","optionsClick","optionsVisibility","descriptionClick","console","log","defaultStyle","colour","innerText","completed","name","selected","Object","assign","pointerEvents","zIndex","mouse","y","x","ghostDiv","marginTop","size","dragOver","dragStart","selectTask","float","openDescription","ViewButton","createColour","func","ifDisabled","disabled","opacity","l","changeTab","paletteTab","buttonStyle","marginRight","marginBottom","colourStyle","margin","borderRadius","verticalAlign","paletteStyle","borderBottomLeftRadius","borderBottomRightRadius","padding","renameStyle","borderBottom","renameButton","renameContainer","paletteTabs","img","button","src","symbolStyle","renameUI","ui","onChange","autoFocus","colourUI","leftFunc","rightFunc","tabLeft","borderTopLeftRadius","tabRight","right","borderTopRightRadius","listView","checkBox","colourSet","colourFunc","update","updateList","listId","colours","descriptionUI","save","View","taskComplete","status","tasks","JSON","parse","stringify","idArr","id","set","taskRename","newname","taskName","buttonUI","description","rename","showing","inputHandle","input","count","removeTag","del","firstCheck","first","delete","setMouse","clientX","clientY","draggedOver","pos","parseInt","drop","closeOptions","box","getBoundingClientRect","bottom","deleteTask","taskIds","taskKeys","xhr","XMLHttpRequest","open","setRequestHeader","document","cookie","onload","task","content","modified","send","taskCreate","values","response","keys","colourPalette","palette","closeDescription","editDescription","saveNewDescription","changeDescription","inputStyle","maxWidth","maxHeight","buttonsStyle","descriptionStyle","overflow","textAreaStyle","resize","closeDescriptionStyle","tasksLoaded","responseType","map","show","taskLabel","key","onMouseMove","editViewColour","readOnly","ListButtons","openNavTab","selectList","ListView","lists","listColour","nameArr","listRename","listName","listCreate","userid","deleteList","listIds","listsLoaded","list","passFunction","buttons","Registration","register","registerUser","registerPass","username","password","loginUserHandle","loginUser","loginPassHandle","loginPass","registerUserHandle","registerPassHandle","registerPass2Handle","registerPass2","tabClick","view","container","alignItems","justifyItems","nav","mixBlendMode","gridTemplateColumns","inactiveTab","activeTab","loginStyle","registerStyle","type","login","App","localStorage","setItem","loggedIn","parentNode","viewKey","callback","path","user","getItem","body","href","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e037cd91.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\n//user can customize colour of tab and its view in the list view\nexport default class NavTab extends Component {\n\n    constructor(props){\n        super(props)\n    }\n    /*\n    onMouseOver={this.hover}\n    onMouseLeave={this.hoverLeave}\n    \n    hover = e => {\n        //later add preventing of text select/highlight\n        e.target.style.backgroundColor = '#797979'\n        e.preventDefault()\n    }\n    hoverLeave = e => {\n        e.target.style.backgroundColor = '#676767'\n    }*/\n\n    xstyle = {\n        fontSize: '90%',\n        color: 'black',\n    }\n    \n    render() {\n        var styling = {\n            cursor: 'pointer',\n            display: 'inline-block',\n            backgroundColor: this.props.colourCode,\n            //transitionDuration: '0.5s',\n            color: 'white',\n            paddingTop: '5px',\n            paddingBottom: '5px',\n            width: '100px',\n            marginLeft: '10px',\n            horizontalAlign: 'middle',\n            textAlign: 'center',\n            fontSize: '110%'\n            //float: 'left',\n        }\n        \n        if (this.props.activeView != this.props.className) {\n            styling.filter = 'brightness(95%)' //can also do this by just making the text a different colour\n        }\n        if (this.props.className.length > 7){\n            var text = this.props.className.slice(0,5)+'...'\n        } else {\n            var text = this.props.className\n        }\n\n        return <div\n        className={this.props.className}\n        style={styling}\n        onClick={(e)=>this.props.changeView(e.target.className,e.target.style.backgroundColor)}>\n            <span \n            style={this.xstyle}\n            onClick={this.props.closeNavTab}\n            >x</span>\n            {text}\n        </div>\n    };\n}","import React, { Component } from 'react'\n\n\n//give x to close\nexport default class ListsTab extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n        }\n    }\n\n    styling = {\n        cursor: 'pointer',\n        display: 'inline-block',\n        backgroundColor: '#079d41',\n        transitionDuration: '0.5s',\n        color: 'white',\n        paddingTop: '5px',\n        paddingBottom: '5px',\n        width: '100px',\n        marginLeft: '10px',\n        horizontalAlign: 'middle',\n        textAlign: 'center',\n        fontSize: '110%'\n    }\n    \n    render() {\n        return <div className='Lists'\n        style={this.styling}\n        onMouseOver={this.hover}\n        onMouseLeave={this.hoverLeave}\n        onClick={(e)=>this.props.changeView(e.target.className,e.target.style.backgroundColor)}\n        >Lists</div>\n    };\n}","import React, { Component } from 'react'\nimport NavTab from './NavTab'\nimport ListsTab from './ListsTab'\n\nexport default class NavBar extends Component {\n\n    constructor(props){\n        super(props)\n    }\n\n    barStyle = {\n        paddingTop: '5px',\n        backgroundColor: '#373737'\n    }\n\n    render() {\n        var tabs=[]\n        for (let i in this.props.views) {\n            tabs.push(\n            <NavTab closeNavTab={this.props.closeNavTab} \n            className={i} \n            colourCode={this.props.views[i].colourCode}\n            changeView={this.props.changeView}\n            activeView={this.props.activeView}/>\n            ) \n        } \n\n        return (\n            <header \n            style={this.barStyle}>\n                    <ListsTab changeColour={this.props.changeColour}\n                    changeView={this.props.changeView}/>\n                    {tabs} \n            </header>\n        )\n    };\n}","import React, { Component } from 'react'\n\nexport default class TaskButton extends Component {\n    constructor(props){\n        super(props)\n    }\n\n    styling = {\n        color : 'white',\n        backgroundColor : 'black',\n        display : 'inline-block',\n        width : '20px',\n        height : '20px',\n        //marginLeft : '2px',\n        cursor : 'pointer',     \n    }\n\n    render () {\n        return <div \n        onMouseOver={this.props.buttonFunctions.onMouseOver}\n        onMouseLeave={this.props.buttonFunctions.onMouseLeave}\n        onMouseDown={this.props.buttonFunctions.onMouseDown}\n        onClick={this.props.onClick}\n        style={this.styling}>{this.props.symbol}</div>\n    }\n}","import React, { Component } from 'react'\n\nexport default class CheckBox extends Component {\n    constructor(props){\n        super(props)\n    }\n\n\n    render() {\n\n        return <span\n        onMouseOver={e=>{\n            e.target.style.backgroundColor='rgba(250,250,250,1)'\n        }}\n        onMouseLeave={e=>{\n            e.target.style.backgroundColor='rgba(240,240,240,1)'\n        }}\n        onMouseDown={this.props.preventPropogation}\n        onMouseUp={this.props.mouseUpFix}\n        onClick={e=>this.props.select(e,this.props.priority)}\n        style={{\n            display : 'inline-block',\n            //tick needs to be moved to the left slightly\n            userSelect : 'none',\n            //cursor : 'pointer',\n            color : 'black',\n            lineHeight : '9px',\n            position : this.props.position,\n            top: this.props.top,\n            transform: 'translateY(-50%)',\n            height : '10px',\n            width : '10px',\n            left : this.props.left,\n            border : '1px solid rgba(200,200,200,1)',\n            backgroundColor : 'rgba(240,240,240,1)'\n        }}>\n            {this.props.check}\n        </span>\n    }\n}","import React, { Component } from 'react'\nimport TaskButton from './TaskButton'\nimport CheckBox from './CheckBox'\n\nexport default class Task extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            taskColour : this.props.colour,\n        }\n    }\n\n    changeTaskColour = e => {\n        this.setState({\n            taskColour : e.target.value\n        })\n    }\n\n    preventPropogation = e => {\n        e.stopPropagation()\n    }\n\n    hover = e => {\n        if(!this.props.dragging){\n            e.target.style.textShadow = '0px 0px 8px cyan'\n        }\n    }\n    \n    hoverEnd = e => {\n        e.target.style.textShadow = 'none'\n    }\n\n    optionsClick = e => {\n        if (this.state.optionsVisibility == 'none') {\n            this.setState({\n                optionsVisibility : 'inline-block'\n            })\n        } else {\n            this.setState({\n                optionsVisibility : 'none'\n            })\n        }\n    }\n\n    descriptionClick = e => {\n        console.log('description')\n    }\n\n    buttonFunctions = {\n        onMouseOver : this.hover,\n        onMouseLeave : this.hoverEnd,\n        onMouseDown : this.preventPropogation\n    }\n\n    defaultStyle = {\n        userSelect : 'none',\n        width : '250px',\n        height : '50px',\n        textAlign : 'center',\n        //this.state is undefined when putting this.state.taskcolour here\n    }\n    \n    render() {\n        var innerText = this.props.completed ? <s>{this.props.name}</s> : this.props.name\n        var check = this.props.selected ? '✔' : ''\n        if (this.props.dragging && this.props.dragging.name == this.props.name) {\n            var styling = Object.assign({\n                pointerEvents : 'none',\n                zIndex : 1,\n                position : 'fixed',\n                top : (this.props.mouse.y-25)+'px',\n                left : (this.props.mouse.x-125)+'px',\n                backgroundColor :  this.props.colour,\n            },this.defaultStyle)\n\n            var ghostDiv = <div style={{\n                position : 'relative',\n                marginTop : '20px',\n                marginLeft : this.props.marginLeft,\n                width : '250px',\n                height : '50px',\n                transform : this.props.size\n          }}>\n            </div>\n        } else {\n            var styling = Object.assign({\n                marginLeft : this.props.marginLeft,\n                position : 'relative',\n                marginTop : '20px',               \n                backgroundColor :  this.props.colour,\n            },this.defaultStyle)\n            \n            var ghostDiv = null\n        }    \n        //in options when reordering tasks:\n        //name value changes to the task moved to dragged tasks old position\n        //also task moved to that position is changed to the dragged's task colour \n        //dragged task name follows to the new position, but colour changes to the \n        //colour of the task that was in that position before\n        //i know that putting these values in tasks state as a single object will solve it\n        //but before i do that i want to know more about why/how it happens\n        return( \n            <>\n            <div style={styling}\n                onClick={e=>e.stopPropagation()}\n                onMouseUp={this.props.mouseUpFix}\n                onMouseOver={e =>this.props.dragOver(e,this.props.priority)}\n                onMouseDown={e =>this.props.dragStart(e,this.props.priority,this.props.name)}\n            >\n                <CheckBox\n                    position={'absolute'}\n                    top={'50%'}\n                    left={'15px'} \n                    priority={this.props.priority} \n                    preventPropogation={this.preventPropogation}\n                    select={this.props.selectTask}\n                    check={check}/>\n                <span \n                    style={{ \n                    position : 'absolute',\n                    top : '30px',\n                    left : '230px',\n                    float : 'right',                     \n                }}>\n                    <TaskButton\n                        buttonFunctions={this.buttonFunctions}\n                        mouseUpFix={this.props.mouseUpFix}\n                        onClick={e=>this.props.openDescription(e,this.props.priority)}\n                        symbol='?'\n                    />\n                    </span>\n                <span \n                    style={{lineHeight : '50px'}}>\n                    {innerText}\n                </span> \n\n            </div> \n            {ghostDiv}\n            </>\n        )\n    }\n}","import React, { Component } from 'react'\n\nexport default class ViewButton extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            value : '',\n            paletteTab : true\n        }\n    }\n    createColour = (colourCode, style, func) => {\n        style=Object.assign({backgroundColor:colourCode},style)\n        return <span style={style} onClick={func}/>\n    }\n    ifDisabled = (style) => {\n        if (!this.props.disabled) {\n            style.opacity = '0.5'\n            style.pointerEvents = 'none'\n        }\n        if (this.props.l){\n            style.marginLeft=this.props.l\n        }\n        return style\n    }\n    changeTab = () => {\n        this.setState({\n            paletteTab : !this.state.paletteTab\n        })\n    }\n    buttonStyle = {\n        userSelect : 'none',\n        display : 'block',\n        cursor : 'pointer',\n        marginRight : '10px',\n        marginLeft : '10px',\n        marginBottom : '10px'\n    }\n    colourStyle = {\n        display : 'inline-block',\n        margin:'1px',\n        width:'20px',\n        height:'20px',\n        cursor:'pointer',\n        borderRadius : '10px',\n        border:'solid 1px rgba(0,0,0,0.3)',\n        verticalAlign: 'middle' \n    }\n    paletteStyle={\n        textAlign : 'center',//hmm\n        float:'right',\n        position:'absolute',\n        marginTop:'-18px',\n        marginLeft:'52px',\n        width:'100px',\n        backgroundColor:'rgba(255,255,255,0.2)',\n        borderBottomLeftRadius : '10px',\n        borderBottomRightRadius : '10px',\n        padding:'1px'\n    }\n    renameStyle={\n        backgroundColor : 'rgba(255,255,255,0.2)', \n        border: 'none',\n        borderBottom: 'solid 2px', \n        width: '100px',\n        position:'absolute',\n        top:'10px',\n        left:'50px'\n    }\n    renameButton={\n        position:'absolute',\n        left:'150px',\n        top:'7px'\n    }\n    renameContainer={\n        float:'right',\n        marginTop:'-38px',\n        marginLeft:'52px'\n    }\n    paletteTabs = {\n        lineHeight : '20px',\n        textAlign : 'center',\n        fontSize : '80%',\n        width : '51px',\n        height : '20px',\n        backgroundColor:'rgba(255,255,255,0.2)',\n        position: 'absolute',\n        top:'-20px',\n    }\n    render(){\n        if (this.props.img) {\n            var buttonStyle = this.ifDisabled({...this.buttonStyle})\n            var button = <img src={this.props.img} \n                            onClick={this.props.func}\n                            style={buttonStyle} \n                            width='40' height='35'/>\n        } else {\n            var symbolStyle = this.ifDisabled((\n                    Object.assign({\n                        lineHeight : '35px',\n                        fontSize:'300%',\n                        height : '35px',\n                        width : '40px'\n                    },{...this.buttonStyle})\n            ))\n            \n            var button = <div style={symbolStyle} \n                            onClick={this.props.func}>\n                            {this.props.symbol}\n                        </div>\n        }\n        var paletteStyle = {...this.paletteStyle}\n        if (this.props.renameUI && this.props.disabled){\n            var ui = (\n                <span style={this.renameContainer}>\n                    <input style={this.renameStyle}\n                        onChange={e=>this.setState({value:e.target.value})} \n                        autoFocus='true'/>\n                    <button style={this.renameButton}\n                        onClick={(e)=>this.props.func(e,this.state.value)}>\n                        rename\n                    </button>\n                </span>\n            )\n        } else if(this.props.colourUI){\n            var leftFunc,rightFunc\n            var tabLeft = Object.assign({left:0,borderTopLeftRadius:'10px'}, {...this.paletteTabs})\n            var tabRight = Object.assign({right:0,borderTopRightRadius:'10px'}, {...this.paletteTabs})\n            var tabs = <>\n                <span style={tabLeft} onClick={leftFunc}>Tasks</span>\n                <span style={tabRight} onClick={rightFunc}>View</span></>\n            if (!this.props.listView && (!this.state.paletteTab || !this.props.checkBox)){\n                tabLeft.filter = 'brightness(70%)'\n                tabLeft.cursor = 'pointer'\n                leftFunc = this.changeTab\n                var colourSet = ['red','#676767','#333399','purple','pink','orange']\n                var colourFunc = (e)=>this.props.updateList(e,this.props.listId)\n            } else if (this.props.listView) {\n                paletteStyle = Object.assign({borderTopLeftRadius:'10px', borderTopRightRadius:'10px'}, paletteStyle)\n                paletteStyle.marginTop='-38px'\n                tabs = null\n                var colourSet = ['red','#676767','#333399','purple','pink','orange']\n                var colourFunc = (e)=>this.props.update(e,0)\n            } else {\n                tabRight.filter = 'brightness(70%)'\n                tabRight.cursor = 'pointer'\n                rightFunc = this.changeTab\n                var colourFunc = this.props.update\n                var colourSet = ['red','#079d41','#333399','purple','pink','orange']\n            }\n            var colours = []\n            for (let i of colourSet){\n                colours.push(this.createColour(i,this.colourStyle, colourFunc))\n            }\n            var ui = (\n                <span style={paletteStyle}>\n                    <span>\n                        {tabs}\n                    </span>\n                    <span style={{width:'100px', }}>\n                    {colours}\n                    <span style={this.colourStyle}/>{/*put plus sign here and be able to click out*/}\n                    </span>\n                </span>\n            )\n        } else if (this.props.descriptionUI){\n            var ui = <button onClick={this.props.save} style={{position:'absolute',top:'60px',right:'40px'}}>save</button>\n\n        } else {\n            var ui = null\n        }\n    return (\n        <div\n            onMouseUp={this.props.mouseUpFix}\n            onClick={e=>e.stopPropagation()}>\n            {button}\n            {ui}\n        </div>\n        )\n    }\n}","import React, { Component } from 'react'\n\nexport default class ViewButton extends Component{\n    constructor(props){\n        super(props)\n\n    }\n    buttonStyle = {\n        cursor : 'pointer',\n        marginRight : '10px',\n        marginLeft : '10px',\n    }\n    render(){\n        if (this.props.img) {\n            var button = <img src={this.props.img} \n            onClick={this.props.func}\n            style={this.buttonStyle} \n            width='40' height='35'/>\n        } else {\n            var symbolStyle = Object.assign({\n                display : 'inline-block',\n                lineHeight : '35px',\n                fontSize:'300%',\n                height : '35px',\n                width : '40px'\n            },{...this.buttonStyle})\n            if (this.props.disabled) {\n                symbolStyle.color = 'rgba(0,0,0,0.5)'\n                symbolStyle.cursor = 'default'\n            }\n            var button = <div style={symbolStyle} onClick={this.props.func}>{this.props.symbol}</div>\n        }\n        return button\n    }\n}","import React, { Component } from 'react'\nimport Task from './Task'\nimport ViewButton from './ViewButton'\nimport ViewButton_s from './ViewButton(sidebar)'\n\nexport default class View extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            tasks : {},\n            tasksLoaded : false,\n            dragging : null,\n            draggedOver : null,\n            mouse : 0,\n            input : '',\n            checkBox : 0, \n            buttonUI : {rename: false, colour: {palette : false, button : false}, check: false, delete : false, description : true},\n            description : {showing : false, task : 1, content : 'description', modified : false}\n        }\n    }\n\n\n    taskComplete = () => {\n        var tasks =  JSON.parse(JSON.stringify(this.state.tasks))\n        var idArr = []\n        var status\n        for (let i in tasks){\n            if (tasks[i].selected){\n                status = !tasks[i].completed\n                tasks[i].completed=!tasks[i].completed\n                idArr.push(tasks[i].id)\n            }\n        }\n        var set = (tasks) => {\n            this.setState({\n                tasks : tasks\n            })    \n        }\n        this.props.update({idArr : idArr, completed : status},()=>{set(tasks)},'tasks/'+this.props.listId)\n    }\n    taskColour = e => {\n        var tasks = JSON.parse(JSON.stringify(this.state.tasks))\n        var idArr = []\n        var colour = e.target.style.backgroundColor\n        for (let i in tasks){\n            if (tasks[i].selected){\n                idArr.push(tasks[i].id)\n                tasks[i].colour=e.target.style.backgroundColor\n            }\n        }\n        var set = (tasks) => {\n            this.setState({\n                tasks : tasks\n            })    \n        }\n        this.props.update({idArr : idArr, colour : colour},()=>{set(tasks)},'tasks/'+this.props.listId)\n    }\n    taskRename = (e, newname) => {\n        if(newname){\n            var tasks =  JSON.parse(JSON.stringify(this.state.tasks))\n            for (let i in tasks){\n                if (tasks[i].selected){\n                    tasks[i].name=newname\n                    var idArr=[tasks[i].id]\n                    break\n                }\n            }\n            var set = (tasks) => {\n                this.setState({\n                    tasks : tasks\n                })    \n            }\n            this.props.update({idArr : idArr, taskName : newname},()=>{set(tasks)},'tasks/'+this.props.listId)\n        } else {\n            var buttonUI =  JSON.parse(JSON.stringify(this.state.buttonUI))\n            var description = JSON.parse(JSON.stringify(this.state.description))\n            buttonUI.rename = !buttonUI.rename\n            description.showing = false\n            this.setState({\n                buttonUI : buttonUI,\n                description : description\n            })\n        }\n    }\n    inputHandle = e => {\n        this.setState({\n            input : e.target.value\n        })\n    }\n    selectTask = (e,priority) => {\n        e.stopPropagation()\n        var tasks =     JSON.parse(JSON.stringify(this.state.tasks))\n        var buttonUI =  JSON.parse(JSON.stringify(this.state.buttonUI))\n        if (tasks[priority].selected){\n            var count = this.state.checkBox-1\n        } else {\n            var count = this.state.checkBox+1\n        }\n        if (count>1){\n            var removeTag = true\n        }\n        if (count>=1){\n            var del = true\n            var colour = true \n            var check = true\n        }\n        var rename = removeTag ? false : this.state.buttonUI.rename\n        tasks[priority].selected = !tasks[priority].selected\n        var firstCheck = true\n        for (let i in tasks){\n            if (tasks[i].selected){\n                if (firstCheck) {\n                    var first = tasks[i].completed\n                    firstCheck = false\n                } else {\n                    if (tasks[i].completed!=first){\n                        var check = false\n                        break\n                    }\n                }\n            }\n        } \n        if (count == 0) {\n            rename = check = del = false \n        }\n        buttonUI = {\n            rename: rename, \n            colour: this.state.buttonUI.colour, \n            check: check, \n            delete : del,\n            description : this.state.buttonUI.description\n        }\n        this.setState({\n            tasks : tasks,\n            checkBox : count,\n            buttonUI : buttonUI\n        })\n    }\n    setMouse = e => {\n        if(this.props.activeView == this.props.className && this.state.dragging){\n            this.setState({\n                mouse : {x : e.clientX, y : e.clientY}\n            },()=>{\n                if (this.state.draggedOver){\n                    var draggedOver = this.state.draggedOver.priority\n                    var dragging = this.state.dragging.priority\n                    var tasks= JSON.parse(JSON.stringify(this.state.tasks))\n                    if (this.state.mouse.y < this.state.draggedOver.pos && dragging>draggedOver){\n                        delete tasks[dragging]\n                        tasks[draggedOver]=this.state.tasks[dragging]\n                        for(let i=parseInt(draggedOver)+1; i<=dragging; i++){\n                            tasks[i]=this.state.tasks[i-1]\n                        }\n                        this.setState({\n                            tasks : tasks,\n                            dragging : {priority : draggedOver, name : this.state.dragging.name}\n                        })\n                    } else if (this.state.mouse.y > this.state.draggedOver.pos && dragging<draggedOver){ \n                        delete tasks[dragging]\n                        tasks[draggedOver]=this.state.tasks[dragging]\n                        for(let i=draggedOver-1; i>=dragging; i--){\n                            tasks[i]=this.state.tasks[i+1]\n                        }\n                        this.setState({\n                            tasks : tasks,\n                            dragging : {priority : draggedOver, name : this.state.dragging.name}\n                        })\n                    }   \n                }\n            })\n        }\n    }\n    dragStart = (e,priority,name) => {\n        this.setState ({\n            dragging : {priority,name},\n            mouse : {x : e.clientX, y : e.clientY}\n        })\n    }\n    mouseUpFix = e =>{\n        e.stopPropagation()\n        if(this.state.dragging){\n            this.setState({\n                dragging : null,\n                draggedOver : null,\n                mouse : 0\n            }) \n        }\n    }\n    drop = () => {\n        if(!this.state.dragging){\n            this.closeOptions()\n        } else {\n            this.setState({\n                dragging : null,\n                draggedOver : null,\n                mouse : 0\n            })  \n        }\n    }\n    dragOver = (e,priority) => {\n        if(this.state.dragging){\n            var box = e.target.getBoundingClientRect()\n            var pos = box.bottom - box.height/2\n            this.setState({\n                draggedOver: {priority : priority, pos : pos}\n            })\n        }\n    }    \n    deleteTask = ()=> {\n        var taskIds = []\n        var taskKeys = []\n        var tasks =  JSON.parse(JSON.stringify(this.state.tasks))\n        var description = JSON.parse(JSON.stringify(this.state.description))\n        for (let i in tasks){\n            if (tasks[i].selected){\n                taskIds.push(tasks[i].id)\n                taskKeys.push(i)\n            }\n        }\n        var xhr = new XMLHttpRequest()\n        xhr.open('DELETE','http://localhost:8000/api/tasks/'+this.props.listId+'/')\n        xhr.setRequestHeader('content-type','application/json')\n        xhr.setRequestHeader('X-CSRFTOKEN',document.cookie.slice(10))\n        xhr.onload = () => {\n            console.log(xhr.status)\n            if (xhr.status == 204){\n                    for (let i of taskKeys){\n                        if(i == this.state.description.task.priority){\n                            description = {showing : false, task : 1, content : 'description', modified : false}\n                        }\n                        delete tasks[i]\n                    }\n                    this.setState({\n                        tasks: tasks,\n                        description: description\n                    })\n                } \n            }\n        xhr.send(JSON.stringify(taskIds))\n    } \n    taskCreate = () => { //remember to takeout cors middleware\n        for (let i of Object.values(this.state.tasks)) {\n            if (i.name==this.state.input) {return}\n        }\n        var xhr = new XMLHttpRequest()\n        xhr.open('POST','http://localhost:8000/api/tasks/'+this.props.listId+'/')\n        xhr.setRequestHeader('content-type','application/json')\n        xhr.setRequestHeader('X-CSRFTOKEN',document.cookie.slice(10))\n        xhr.onload = () => {\n            if (xhr.status == 201){\n                var response = JSON.parse(xhr.response)\n                this.setState({\n                    tasks : { ...this.state.tasks, [response.priority] : {id : response.id, colour : response.colour, description : '', selected : false, name : response.taskName}},\n                    input : ''\n                })\n            }\n        }\n        var priority=0\n        if (this.state.tasks['0']){\n            priority=parseInt(Object.keys(this.state.tasks).slice(-1)[0])+1\n        }\n        xhr.send(JSON.stringify({listId : this.props.listId, taskName : this.state.input, priority : priority}))\n    }\n    colourPalette = () => {\n        var buttonUI =  JSON.parse(JSON.stringify(this.state.buttonUI))\n        var description = JSON.parse(JSON.stringify(this.state.description))\n        description.showing = false\n            buttonUI.colour.palette = !buttonUI.colour.palette\n            this.setState({\n                buttonUI : buttonUI,\n                description : description\n            })\n    }\n    componentDidUpdate(){\n        if (this.props.activeView == this.props.className && !this.state.tasksLoaded) {\n            let xhr = new XMLHttpRequest()\n            xhr.open('GET','http://localhost:8000/api/tasks/'+this.props.listId)\n            xhr.setRequestHeader('content-type','application/json')\n            xhr.responseType = 'json'\n            xhr.onload = () => {\n                if (xhr.status == 200) {\n                    let tasks = {}\n                    xhr.response.map(task => {\n                        tasks[task.priority]={\n                            id : task.id, \n                            colour : task.colour, \n                            description : task.description, \n                            selected : false, \n                            name : task.taskName,\n                            completed : task.completed\n                        }\n                    })\n                    this.setState({\n                        tasks : tasks,\n                        tasksLoaded : true,\n                    })\n                }\n            }\n            xhr.send()\n        }\n    }\n    openDescription = (e,priority) =>{\n        if(this.state.description.showing && priority == this.state.description.task.priority){\n            this.closeDescription()\n            return\n        }\n        var task = JSON.parse(JSON.stringify(this.state.tasks[priority]))\n        var buttonUI = JSON.parse(JSON.stringify(this.state.buttonUI))\n        buttonUI.description = true\n        buttonUI.rename = false\n        buttonUI.colour.palette = false\n        task.priority = priority\n        var description = {\n            showing : true,\n            task : task,\n            content : task.description,\n            modified : false\n        }\n        this.setState({\n            buttonUI : buttonUI,\n            description : description\n        })\n    }\n    closeDescription = () => {\n        var description = JSON.parse(JSON.stringify(this.state.description))\n        var buttonUI = JSON.parse(JSON.stringify(this.state.buttonUI))\n        buttonUI.description = true\n        description.showing = false\n        description.modified = false\n        description.content = description.task.description\n        this.setState({\n            buttonUI : buttonUI,\n            description : description\n        })\n    }\n    editDescription = e =>{\n        var buttonUI = JSON.parse(JSON.stringify(this.state.buttonUI))\n        buttonUI.description = !buttonUI.description\n        this.setState({\n            buttonUI : buttonUI\n        })\n    }\n    saveNewDescription = e =>{\n        var description = JSON.parse(JSON.stringify(this.state.description))\n        var buttonUI = JSON.parse(JSON.stringify(this.state.buttonUI))\n        var tasks = JSON.parse(JSON.stringify(this.state.tasks))\n        var idArr = [description.task.id]\n        description.modified = false\n        buttonUI.description = !buttonUI.description\n        tasks[description.task.priority].description=description.content\n        var set = (tasks,buttonUI,description) => {\n            this.setState({\n                tasks : tasks,\n                buttonUI : buttonUI,\n                description : description\n            })\n        }\n        this.props.update({idArr : idArr, description : description.content},()=>{set(tasks,buttonUI,description)},'tasks/'+this.props.listId)\n    }\n    changeDescription = e =>{\n        var description = JSON.parse(JSON.stringify(this.state.description))\n        description.content = e.target.value\n        description.modified = true\n        this.setState({\n            description : description\n        })\n    }\n    closeOptions = e =>{\n        var buttonUI = JSON.parse(JSON.stringify(this.state.buttonUI))\n        var description = JSON.parse(JSON.stringify(this.state.description))\n        buttonUI.rename = false\n        buttonUI.colour.palette = false\n        description.showing = false\n        this.setState({\n            buttonUI : buttonUI,\n            description : description\n        })\n    }\n    inputStyle = {\n        width:'235px',\n        fontSize: '14px', \n        maxWidth: '235px', \n        maxHeight: '32px'\n    }\n    buttonsStyle = {\n        marginLeft : '255px', \n        position : 'absolute', \n        marginTop : '10px'\n    }\n    ghostDiv = {\n        position: 'relative', \n        height : '34px', \n        pointerEvents : 'none', \n        marginBottom:'10px'\n    }\n    descriptionStyle = {\n        position: 'absolute',\n        left: '400px',\n        top:'140px',\n        maxWidth:'300px',\n        backgroundColor: 'rgba(255,255,255,0.5)',\n        overflow:'hidden',\n        //wordWrap:'break-word'\n    }\n    textAreaStyle = {\n        color : 'rgba(0,0,0,1)',\n        display : 'block',\n        border : 'none',\n        backgroundColor : 'rgba(0,0,0,0)',\n        resize : 'none'\n    }\n    closeDescriptionStyle = {\n        marginTop:'-2px',\n        marginRight:'3px',\n        float:'right', \n        cursor:'pointer', \n        opacity:0.3\n    }\n    render(){        \n        var disabled = true\n        if (this.state.checkBox!=1) {\n                disabled = false\n        }\n        var styling = {margin : '50px', width: '100%', height:'90%'}\n        if (this.props.activeView != this.props.className) {\n            styling.display = 'none'\n        } \n        var show = 'none'\n        if (this.state.description.showing){\n            show = 'block'\n        }\n        if (this.state.description.task.priority){\n            var taskLabel = { backgroundColor : this.state.tasks[this.state.description.task.priority].colour}\n        }\n        var modified = this.state.description.modified ? <span style={{color:'red'}}>(modified)</span> : null\n        var descriptionStyle = Object.assign({display : show},{...this.descriptionStyle})\n        var tasks=[]\n        for (let i in this.state.tasks){\n            tasks.push(    \n                <div key={this.state.tasks[i].name}>\n                    <Task  \n                        mouseUpFix={this.mouseUpFix}\n                        openDescription={this.openDescription}\n                        completed={this.state.tasks[i].completed}\n                        colour={this.state.tasks[i].colour}\n                        selected={this.state.tasks[i].selected}\n                        selectTask={this.selectTask}\n                        listId={this.props.listId}\n                        dragOver={this.dragOver}\n                        dragging={this.state.dragging}\n                        mouse={this.state.mouse}\n                        deleteTask={this.deleteTask}\n                        dragStart={this.dragStart}\n                        name={this.state.tasks[i].name}\n                        id={this.state.tasks[i].id}\n                        priority={i}\n                    /> \n                </div>\n            ) \n        }\n        return (\n            <div style={styling}\n                onMouseMove={this.setMouse} \n                onMouseUp={this.drop} \n                className={this.props.className}>\n                <span style={{position : 'absolute'}}> \n                    <input key=\"taskCreationInput\" \n                        style={this.inputStyle}\n                        onChange={this.inputHandle} \n                        value={this.state.input}/>\n                    <button onClick={this.taskCreate}>create</button>\n                </span>\n                <div style={this.ghostDiv}/>\n                <span style={this.buttonsStyle}>\n                    <ViewButton_s symbol={'✍'} disabled={disabled} \n                        func={this.taskRename} \n                        mouseUpFix={this.mouseUpFix}\n                        renameUI={this.state.buttonUI.rename}/>    \n                    <ViewButton_s img={'/static/colour.png'} \n                        checkBox={this.state.checkBox}\n                        editViewColour={this.props.editViewColour} \n                        className={this.props.className}\n                        func={this.colourPalette} \n                        mouseUpFix={this.mouseUpFix}\n                        update={this.taskColour} \n                        updateList={this.props.updateList}\n                        listId={this.props.listId}\n                        disabled={true}\n                        colourUI={this.state.buttonUI.colour.palette}/>\n                    <ViewButton_s symbol={'✔'} \n                        func={this.taskComplete} \n                        mouseUpFix={this.mouseUpFix}\n                        disabled={this.state.buttonUI.check}/> \n                    <ViewButton_s img={'/static/delete.png'} l='7px' \n                        func={this.deleteTask} \n                        mouseUpFix={this.mouseUpFix}\n                        disabled={this.state.buttonUI.delete}/> {/* need better trash icon */}\n                </span>\n                    {tasks}\n                <div style={descriptionStyle} onClick={e=>e.stopPropagation()} onMouseUp={e=>e.stopPropagation()}>\n                    <span style={taskLabel}>\n                        {this.state.description.task.name}\n                        <span style={this.closeDescriptionStyle} \n                            onClick={this.closeDescription}>\n                            x\n                        </span>\n                    </span>\n                    {modified}\n                    <textarea value={this.state.description.content} \n                        style={this.textAreaStyle} \n                        readOnly={this.state.buttonUI.description}\n                        onChange={this.changeDescription}/>           \n                    <ViewButton_s symbol={'✍'} \n                        func={this.editDescription} \n                        save={this.saveNewDescription}\n                        style={{float:'right', margin:'-10px'}}\n                        disabled={'true'} \n                        descriptionUI={!this.state.buttonUI.description}/>\n                </div>\n            </div>\n        )//tick, editname, delete, colour\n    } \n}\n/*\n                <span style={{marginLeft : '255px', position : 'absolute', marginTop : '5px'}}>\n                    <ViewButton_s symbol={'✔'}/> \n                    <ViewButton_s symbol={'✍'}/>    \n                    <ViewButton_s img={'colour.png'}/>\n                    <ViewButton_s img={'delete.png'} l='7px'/> \n                </span>\n*/\n/*\n                <span style={{marginLeft : '5px'}}>\n                    <ViewButton symbol={'✔'}/> \n                    <ViewButton symbol={'✍'}/>  \n                    <ViewButton img={'delete.png'}/>  \n                    <ViewButton img={'colour.png'}/> \n                </span>\n*/","import React, { Component } from 'react'\nimport CheckBox from './CheckBox'\n\nexport default class ListButtons extends Component {\n    constructor(props) {\n        super(props)\n    }\n//animation when tab is created to show where it is\n//queue animation: when oppened or is already opened, \n\n    styling = {\n        display : 'block',\n        position : 'relative',\n        marginTop : '20px',\n        userSelect: 'none',\n        width : '250px',\n        height : '50px',\n        textAlign : 'center',\n    }\n\n    render() {\n        var check = this.props.selected ? '✔' : ''      \n        var styling = Object.assign({backgroundColor : this.props.colour},{...this.styling})\n        return (\n            <div style={styling} \n                onClick={(e)=>this.props.openNavTab(this.props.name,this.props.colour,this.props.id)}>\n                <CheckBox\n                    position={'absolute'}\n                    top={'50%'}\n                    left={'15px'} \n                    priority={this.props.id}\n                    preventPropogation={e=>e.stopPropagation()}\n                    select={this.props.selectList}\n                    check={check}/>\n                <span style={{lineHeight : '50px', pointerEvents : 'none'}}>{this.props.name}</span>\n            </div>\n        )//priority={this.props.priority}\n    }\n}","import React, { Component } from 'react'\nimport ListButtons from './ListButtons'\nimport ViewButton_s from './ViewButton(sidebar)'\n\nexport default class ListView extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            lists : {},\n            buttonUI : {rename: false, colour: {palette : false, button : false},delete : false},\n            listsLoaded : false,\n            checkBox : 0,\n            input : '',\n            \n        }\n    }\n    inputHandle = e => {\n        this.setState({\n            input : e.target.value\n        })\n    }\n    selectList = (e,id) => {\n        e.stopPropagation()\n        var lists =     JSON.parse(JSON.stringify(this.state.lists))\n        var buttonUI =  JSON.parse(JSON.stringify(this.state.buttonUI))\n        var count, del, colour, removeTag\n        if (lists[id].selected){\n            count = this.state.checkBox-1\n        } else {\n            count = this.state.checkBox+1\n        }\n        if (count>1){\n            removeTag = true\n        }\n        if (count>=1){\n            colour = del = true\n        }\n        var rename = removeTag ? false : this.state.buttonUI.rename\n        lists[id].selected = !lists[id].selected\n        var firstCheck = true\n        for (let i in lists){\n            if (lists[i].selected){\n                if (firstCheck) {\n                    var first = lists[i].completed\n                    firstCheck = false\n                } else {\n                    if (lists[i].completed!=first){\n                        var check = false\n                        break\n                    }\n                }\n            }\n        } \n        var palette = this.state.buttonUI.colour.palette\n        if (count == 0) {\n            palette = rename = del = false \n        }\n        buttonUI = {\n            rename: rename, \n            colour: {colour : colour, palette : palette},\n            delete : del,\n        }\n        this.setState({\n            lists : lists,\n            checkBox : count,\n            buttonUI : buttonUI\n        })\n    }\n    listColour = (e,id) => {\n        var lists = JSON.parse(JSON.stringify(this.state.lists))\n        var idArr = []\n        var nameArr = []\n        var colour = e.target.style.backgroundColor\n        if(id){\n            idArr.push(id)\n            nameArr.push(lists[id].name)\n            lists[id].colour = colour\n        } else {\n            for (let i in lists){\n                if (lists[i].selected){\n                    idArr.push(i)\n                    nameArr.push(lists[i].name)\n                    lists[i].colour=colour\n                }\n            }\n        }\n        var set = (lists) => {\n            this.setState({\n                lists : lists\n            },()=>this.props.editViewColour(nameArr,colour))    \n        }\n        this.props.update({idArr : idArr, colour : colour},()=>{set(lists)},'lists')\n    }\n    colourPalette = () => {\n        var buttonUI =  JSON.parse(JSON.stringify(this.state.buttonUI))\n            buttonUI.colour.palette = !buttonUI.colour.palette\n            this.setState({\n                buttonUI : buttonUI\n            })\n    }\n    listRename = (e, newname) => {\n        if(newname){\n            var lists =  JSON.parse(JSON.stringify(this.state.lists))\n            for (let i in lists){\n                if (lists[i].selected){\n                    lists[i].name=newname\n                    var idArr=[i]\n                    break\n                }\n            }\n            var set = (lists) => {\n                this.setState({\n                    lists : lists\n                })    \n            }\n            this.props.update({idArr : idArr, listName : newname},()=>{set(lists)},'lists')\n        } else {\n            var buttonUI =  JSON.parse(JSON.stringify(this.state.buttonUI))\n            buttonUI.rename = !buttonUI.rename\n            this.setState({\n                buttonUI : buttonUI,\n            })\n        }\n    }\n    listCreate = e => {\n        for (let i of Object.values(this.state.lists)) {\n            if (i.name==this.state.input) {return}\n        }\n        //if (!this.state.lists(list => list.name == value) && /\\S/.test(value))\n            var xhr = new XMLHttpRequest()\n            xhr.open('POST','http://localhost:8000/api/lists/')\n            xhr.setRequestHeader('content-type','application/json')\n            xhr.setRequestHeader('X-CSRFTOKEN',document.cookie.slice(10))\n            xhr.onload = () => {\n                if (xhr.status == 201){\n                    var response = JSON.parse(xhr.response)\n                    var lists = JSON.parse(JSON.stringify(this.state.lists))\n                    lists[response.id]={                            \n                        name : response.listName,\n                        colour : response.colour,\n                        selected : false\n                    }\n                    this.setState({\n                        lists : lists,\n                        input : ''\n                    })\n                }\n            }\n            xhr.send(JSON.stringify({listName : this.state.input, userid:1}))\n    }\n    deleteList = ()=> {\n        var listIds = []\n        var lists =  JSON.parse(JSON.stringify(this.state.lists))\n        for (let i in lists){\n            if (lists[i].selected){\n                listIds.push(i)\n            }\n        }\n        var xhr = new XMLHttpRequest()\n        xhr.open('DELETE','http://localhost:8000/api/lists/')\n        xhr.setRequestHeader('content-type','application/json')\n        xhr.setRequestHeader('X-CSRFTOKEN',document.cookie.slice(10))\n        xhr.onload = () => {\n            console.log(xhr.status)\n            if (xhr.status == 204){\n                    for (let i of listIds){\n                        delete lists[i]\n                    }\n                    this.setState({\n                        lists: lists,\n                    })\n                } \n            }\n        xhr.send(JSON.stringify(listIds))\n    }\n    componentDidMount(){\n        if (!this.state.listsLoaded) {\n            let xhr = new XMLHttpRequest()\n            xhr.open('GET','http://localhost:8000/api/lists/')\n            xhr.setRequestHeader('content-type','application/json')\n            xhr.responseType = 'json'\n            xhr.onload = () => {\n                if (xhr.status == 200) {\n                    let lists = {}\n                    xhr.response.map(list => {\n                        lists[list.id]={\n                            name : list.listName,\n                            colour : list.colour,\n                            selected : false\n                        }\n                    }\n                )\n                    this.setState({\n                        lists : lists,\n                        tasksLoaded : true\n                    })\n                }\n            }\n            xhr.send()\n            this.props.passFunction(this.listColour)\n        }\n    }\n    closeOptions = e =>{\n        var buttonUI = JSON.parse(JSON.stringify(this.state.buttonUI))\n        buttonUI.rename = false\n        buttonUI.colour.palette = false\n        this.setState({\n            buttonUI : buttonUI,\n        })\n    }\n    buttonsStyle = {\n        marginLeft : '255px', \n        position : 'absolute', \n        marginTop : '10px',\n        top : '130px'\n    }\n    \n    render(){\n        var disabled = true\n        if (this.state.checkBox!=1) {\n                disabled = false\n        }\n        var styling = {margin : '50px', width:'100%' , height:'90%'}\n        if (this.props.activeView != this.props.className) {\n            styling.display = 'none'\n        } \n        var buttons = []\n        for (let i in this.state.lists){\n            buttons.push(                \n                <ListButtons \n                    colour={this.state.lists[i].colour}\n                    selectList={this.selectList}\n                    selected={this.state.lists[i].selected}\n                    openNavTab={this.props.openNavTab} \n                    name={this.state.lists[i].name} \n                    id={i} \n                    />)\n        }\n        return (\n            <div style={styling} \n                onClick={this.closeOptions}\n                className={this.props.className}>\n                <input style={{width:'235px'}}onChange={this.inputHandle} value={this.state.input}/><button onClick={this.listCreate}>create</button>\n                {buttons}\n                <span style={this.buttonsStyle}>\n                    <ViewButton_s symbol={'✍'} disabled={disabled} \n                        func={this.listRename} \n                        renameUI={this.state.buttonUI.rename}/>    \n                    <ViewButton_s img={'/static/colour.png'} \n                        listView={true}\n                        checkBox={this.state.checkBox}\n                        className={this.props.className}\n                        func={this.colourPalette}\n                        update={this.listColour}\n                        disabled={this.state.buttonUI.colour.colour} \n                        colourUI={this.state.buttonUI.colour.palette}/>\n                    <ViewButton_s img={'/static/delete.png'} l='7px' \n                        func={this.deleteList} \n                        disabled={this.state.buttonUI.delete}/> {/* need better trash icon */}\n                </span>\n            </div>\n        )\n    }\n}\n/*\nupdate\ntaskColour\ntaskRename\ndeleteTask\ncolourPalette\ncloseOptions\nselectTask\n*/","import React, {Component} from 'react'\n\nexport default class Registration extends Component {\n    constructor(props){\n        super(props)\n            this.state = {\n                view : 'login',\n                loginUser : '',\n                loginPass : '',\n                registerUser : '',\n                registerPass : '',\n                registerPass2 : ''\n            }\n    }\n    register = () => { //password 2(confirm password) 3rd arg\n        var xhr = new XMLHttpRequest()\n        xhr.open('POST','http://localhost:8000/register/')\n        xhr.setRequestHeader('content-type','application/json')\n        xhr.onload = () => {console.log('loaded: ',xhr.response, xhr.status)}\n        console.log(this.state.registerUser,this.state.registerPass)\n        xhr.send(JSON.stringify({username: this.state.registerUser, password: this.state.registerPass}))\n      }\n    \n    loginUserHandle = e => {\n        this.setState({\n            loginUser : e.target.value\n        },console.log(this.state.loginUser))      \n    }\n\n    loginPassHandle = e => {\n        this.setState({\n            loginPass : e.target.value\n        })\n    }\n\n    registerUserHandle = e => {\n        this.setState({\n            registerUser : e.target.value\n        })\n    }\n\n    registerPassHandle = e => {\n        this.setState({\n            registerPass : e.target.value\n        })\n    }\n\n    registerPass2Handle = e => {\n        this.setState({\n            registerPass2 : e.target.value\n        })\n    }\n\n    tabClick = e => {\n        if (e.target.innerText != this.state.view){\n            this.setState({\n                view : e.target.innerText,\n            })\n        }\n    }\n    container = {\n        color: 'white',\n        display:'grid',\n        position : 'absolute',\n        alignItems : 'center',\n        justifyItems : 'center',\n        //gridRowGap : '5px',\n        //gridTemplateColumns : '30%, 70%',\n        margin : '0 auto',\n        top: '50%',\n        left:'50%',\n        marginTop : '-100px',\n        marginLeft : '-150px',\n        backgroundColor : '#676768',\n        border : '20px solid #676768',\n        borderRadius : '20px',\n        width : '300px',\n        height : '200px',\n    }\n    nav = {\n        mixBlendMode: 'screen',\n        fontSize : '80%',\n        display : 'grid',\n        gridTemplateColumns : '50% 50%',\n        textAlign : 'center',\n        position : 'absolute',\n        top : -20,\n        width : '340px',\n        height : '10px',\n        //backgroundColor : 'rgba(255,255,255,0.5)',\n        //borderBottomColor : 'black',\n        //borderRadius : '20px',\n    }\n    inactiveTab = {\n        cursor : 'pointer',\n        backgroundColor : 'rgba(255,255,255,0.1)',\n        paddingBottom : '3px'\n    }\n    activeTab = {\n        opacity : '0.5'\n    }\n    render(){\n        if (this.state.view == 'login') {\n            var loginStyle = this.activeTab\n            var registerStyle = this.inactiveTab\n            var view = <>\n                Username<input key='logUser' onChange={this.loginUserHandle}/>\n                Password<input key='logPass' onChange={this.loginPassHandle} type={'password'}/>\n                <button onClick={() => this.props.login(this.state.loginUser,this.state.loginPass)}>login</button>\n            </>\n        } else {\n            var loginStyle = this.inactiveTab\n            var registerStyle = this.activeTab \n            var view =  <>\n                Username<input key='regUser' onChange={this.registerUserHandle}/>\n                Password<input key='regPass' onChange={this.registerPassHandle} type={'password'}/>\n                Confirm Password<input key='regPass2' onChange={this.registerPass2Handle} type={'password'}/>\n                <button onClick={this.register}>create</button>\n            </>\n        }\n        return(\n            <div style={this.container}>\n                <div style={this.nav}>\n                    <span onClick={this.tabClick} style={registerStyle}>register</span>\n                    <span onClick={this.tabClick} style={loginStyle}>login</span>\n                </div>\n                {view}\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport NavBar from './components/NavBar'\nimport View from './components/View.js'\nimport ListView from './components/ListView.js'\nimport Registration from './components/Registration.js'\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      views : {},\n      colour : '#079d41',\n      activeView : 'Lists',\n      loggedIn : false,\n      user : {},\n      func : null\n    }\n  }\n\n  login = (username,password) => {\n    var xhr = new XMLHttpRequest()\n    xhr.open('POST','http://localhost:8000/login/')\n    xhr.setRequestHeader('content-type','application/json')\n    xhr.onload = () => {\n      console.log(xhr.response)\n      if (xhr.response == '\"Success\"') {\n        localStorage.setItem('loggedIn', true)\n        this.setState ({\n          loggedIn : true\n        })\n      } \n      //setstate loggedin true, user {id and name?}\n    }\n    xhr.send(JSON.stringify({username: username, password: password}))\n  }\n  passFunction = func => {\n    this.setState({\n      func : func\n    })\n  }\n  changeView = (name, colourCode) => {\n    //this worked for some reason -> this.state.activeView = e.target.id\n    this.setState({\n      activeView : name,\n      colour : colourCode\n    })\n  }\n\n  editViewColour = (nameArr, colourCode) => {\n    var views = JSON.parse(JSON.stringify(this.state.views))\n    var colour = this.state.colour\n    if (this.state.activeView == nameArr){\n      colour = colourCode\n    }\n    for (let i of nameArr){\n      if (views[i]){\n        views[i].colourCode = colourCode\n      }\n    }\n    this.setState({\n      views : views,\n      colour : colour\n    })\n  }\n\n  openNavTab = (name, colourCode, listId) => {\n    if (this.state.views[name]){\n      return\n    }\n    var views = JSON.parse(JSON.stringify(this.state.views))\n    views[name]={colourCode: colourCode, listId : listId}\n    this.setState({\n        views : views\n    })\n  }\n\n  closeNavTab = e => {\n    e.stopPropagation()\n    var views = JSON.parse(JSON.stringify(this.state.views))\n    var name = e.target.parentNode.className\n    delete views[name]\n    this.setState ({\n      views: views\n    },() =>{\n      if(!this.state.views.length){\n        this.changeView('Lists','#079d41')\n      } else {      \n        let viewKey = Object.keys(this.state.views).slice(-1)[0]\n        this.changeView(viewKey,this.state.views[viewKey].colourCode)\n        //this is annoying if you have another tab open that you are not closing. come back to this.\n      } \n    })\n  }\n  update = (update,callback,path) => {\n    var xhr = new XMLHttpRequest()\n    xhr.open('PATCH','http://localhost:8000/api/'+path+'/')\n    xhr.setRequestHeader('content-type','application/json')\n    xhr.setRequestHeader('X-CSRFTOKEN',document.cookie.slice(10))\n    xhr.onload = () => { console.log(xhr.status)\n        if (xhr.status == 206){\n            callback()\n            }\n        }\n    xhr.send(JSON.stringify(update))\n}\n\n  componentWillMount(){\n    if (!this.state.loggedIn && localStorage.getItem('loggedIn') == \"true\"){\n      this.setState({\n        loggedIn : true\n      })\n    }\n  }\n  render() {\n    document.body.style.backgroundColor = this.state.colour\n    if (this.state.loggedIn){\n      var views=[]\n      for (let i in this.state.views){\n        views.push(\n        <View className={i} \n        key={i}\n        listId={this.state.views[i].listId}\n        update={this.update}\n        updateList={this.state.func} \n        activeView={this.state.activeView}/>\n        )\n      }\n      var show = [<NavBar views={this.state.views} \n        closeNavTab={this.closeNavTab} \n        changeView={this.changeView}\n        activeView={this.state.activeView}/>,\n    \n        <div id='views'>\n          <ListView className='Lists'\n            update={this.update}\n            openNavTab={this.openNavTab} \n            editViewColour={this.editViewColour} \n            passFunction={this.passFunction}\n            activeView={this.state.activeView}/>\n          {views}\n        </div>]\n    } else {\n      var show = <Registration login={this.login}/>\n    }\n    \n    return ( \n      <>\n        {show}\n        <a onClick = {()=>localStorage.setItem('loggedIn', false)}\n        href='http://localhost:8000/logout'>logout</a>\n      </>\n    )\n  }\n}\n\nexport default App;\n    //https://htmlcolorcodes.com/\n    //https://scriptverse.academy/tutorials/reactjs-update-array-state.html\n    //https://stackoverflow.com/questions/37435334/correct-way-to-push-into-state-array\n    //https://www.iconarchive.com","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}