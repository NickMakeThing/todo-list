{"version":3,"sources":["components/NavTab.js","components/ListsTab.js","components/NavBar.js","components/TaskButton.js","components/CheckBox.js","components/Task.js","components/Options.js","components/View.js","components/ListButtons.js","components/ListView.js","components/Registration.js","App.js","serviceWorker.js","index.js"],"names":["NavTab","props","xstyle","fontSize","color","styling","cursor","display","backgroundColor","this","colourCode","paddingTop","paddingBottom","width","marginLeft","horizontalAlign","textAlign","activeView","className","filter","length","text","slice","style","onClick","e","changeView","target","closeNavTab","Component","ListsTab","transitionDuration","state","onMouseOver","hover","onMouseLeave","hoverLeave","NavBar","barStyle","tabs","views","i","push","changeColour","TaskButton","height","buttonFunctions","onMouseDown","symbol","CheckBox","preventPropogation","selectTask","name","lineHeight","position","top","transform","left","border","check","Task","changeTaskColour","setState","taskColour","value","stopPropagation","dragging","textShadow","hoverEnd","optionsClick","optionsVisibility","descriptionClick","console","log","defaultStyle","userSelect","colour","selected","Object","assign","pointerEvents","zIndex","mouse","y","x","ghostDiv","marginTop","size","dragOver","dragStart","float","Options","container","alignItems","justifyItems","margin","borderRadius","textarea","maxWidth","maxHeight","taskName","listName","viewColour","description","taskNameInput","disabled","type","maxLength","deleteTask","View","inputHandle","input","checkBoxes","setMouse","clientX","clientY","draggedOver","tasks","c","draggingIndex","overIndex","pos","splice","drop","box","getBoundingClientRect","bottom","deletedTask","xhr","XMLHttpRequest","open","listId","id","setRequestHeader","document","cookie","onload","status","send","taskCreate","includes","JSON","parse","response","taskCheck","stringify","tasksLoaded","responseType","map","task","priority","key","subTaskCreate","onMouseMove","onMouseUp","onChange","ListButtons","onDown","openNavTab","list","children","editViewColour","ListView","listCreate","parentNode","lists","some","test","userid","listsLoaded","buttons","Registration","register","registerUser","registerPass","username","password","loginUserHandle","loginUser","loginPassHandle","loginPass","registerUserHandle","registerPassHandle","registerPass2Handle","registerPass2","tabClick","innerText","view","nav","mixBlendMode","gridTemplateColumns","inactiveTab","activeTab","opacity","loginStyle","registerStyle","login","App","localStorage","setItem","loggedIn","user","getItem","body","show","href","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3dce73a2.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\n//user can customize colour of tab and its view in the list view\nexport default class NavTab extends Component {\n\n    constructor(props){\n        super(props)\n    }\n    /*\n    onMouseOver={this.hover}\n    onMouseLeave={this.hoverLeave}\n    \n    hover = e => {\n        //later add preventing of text select/highlight\n        e.target.style.backgroundColor = '#797979'\n        e.preventDefault()\n    }\n    hoverLeave = e => {\n        e.target.style.backgroundColor = '#676767'\n    }*/\n\n    xstyle = {\n        fontSize: '90%',\n        color: 'black',\n    }\n    \n    render() {\n        var styling = {\n            cursor: 'pointer',\n            display: 'inline-block',\n            backgroundColor: this.props.colourCode,\n            //transitionDuration: '0.5s',\n            color: 'white',\n            paddingTop: '5px',\n            paddingBottom: '5px',\n            width: '100px',\n            marginLeft: '10px',\n            horizontalAlign: 'middle',\n            textAlign: 'center',\n            fontSize: '110%'\n            //float: 'left',\n        }\n        \n        if (this.props.activeView != this.props.className) {\n            styling.filter = 'brightness(95%)' //can also do this by just making the text a different colour\n        }\n        if (this.props.className.length > 7){\n            var text = this.props.className.slice(0,5)+'...'\n        } else {\n            var text = this.props.className\n        }\n\n        return <div\n        className={this.props.className}\n        style={styling}\n        onClick={(e)=>this.props.changeView(e.target.className,e.target.style.backgroundColor)}>\n            <span \n            style={this.xstyle}\n            onClick={this.props.closeNavTab}\n            >x</span>\n            {text}\n        </div>\n    };\n}","import React, { Component } from 'react'\n\n\n//give x to close\nexport default class ListsTab extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n        }\n    }\n\n    styling = {\n        cursor: 'pointer',\n        display: 'inline-block',\n        backgroundColor: '#079d41',\n        transitionDuration: '0.5s',\n        color: 'white',\n        paddingTop: '5px',\n        paddingBottom: '5px',\n        width: '100px',\n        marginLeft: '10px',\n        horizontalAlign: 'middle',\n        textAlign: 'center',\n        fontSize: '110%'\n    }\n    \n    render() {\n        return <div className='Lists'\n        style={this.styling}\n        onMouseOver={this.hover}\n        onMouseLeave={this.hoverLeave}\n        onClick={(e)=>this.props.changeView(e.target.className,e.target.style.backgroundColor)}\n        >Lists</div>\n    };\n}","import React, { Component } from 'react'\nimport NavTab from './NavTab'\nimport ListsTab from './ListsTab'\n\nexport default class NavBar extends Component {\n\n    constructor(props){\n        super(props)\n    }\n\n    barStyle = {\n        paddingTop: '5px',\n        backgroundColor: '#373737'\n    }\n\n    render() {\n        var tabs=[]\n        for (let i of this.props.views) {\n            tabs.push(\n            <NavTab closeNavTab={this.props.closeNavTab} \n            className={i.className} \n            colourCode={i.colourCode}\n            changeView={this.props.changeView}\n            activeView={this.props.activeView}/>\n            ) \n        } \n\n        return (\n            <header \n            style={this.barStyle}>\n                    <ListsTab changeColour={this.props.changeColour}\n                    changeView={this.props.changeView}/>\n                    {tabs} \n            </header>\n        )\n    };\n}","import React, { Component } from 'react'\n\nexport default class TaskButton extends Component {\n    constructor(props){\n        super(props)\n    }\n\n    styling = {\n        color : 'white',\n        backgroundColor : 'black',\n        display : 'inline-block',\n        width : '20px',\n        height : '20px',\n        //marginLeft : '2px',\n        cursor : 'pointer',     \n    }\n\n    render () {\n        return <div \n        onMouseOver={this.props.buttonFunctions.onMouseOver}\n        onMouseLeave={this.props.buttonFunctions.onMouseLeave}\n        onMouseDown={this.props.buttonFunctions.onMouseDown}\n        onClick={this.props.onClick}\n        style={this.styling}>{this.props.symbol}</div>\n    }\n}","import React, { Component } from 'react'\n\nexport default class CheckBox extends Component {\n    constructor(props){\n        super(props)\n    }\n\n\n    render() {\n\n        return <span\n        onMouseOver={e=>{\n            e.target.style.backgroundColor='rgba(250,250,250,1)'\n        }}\n        onMouseLeave={e=>{\n            e.target.style.backgroundColor='rgba(240,240,240,1)'\n        }}\n        onMouseDown={this.props.preventPropogation}\n        onClick={()=>this.props.selectTask(this.props.name)}\n        style={{\n            //tick needs to be moved to the left slightly\n            lineHeight : '9px',\n            position : 'absolute',\n            top: '50%',\n            transform: 'translateY(-50%)',\n            height : '10px',\n            width : '10px',\n            left : '15px',\n            border : '1px solid rgba(200,200,200,1)',\n            backgroundColor : 'rgba(240,240,240,1)'\n        }}>\n            {this.props.check}\n        </span>\n    }\n}","import React, { Component } from 'react'\nimport TaskButton from './TaskButton'\nimport CheckBox from './CheckBox'\n\nexport default class Task extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            taskColour : this.props.colour,\n            optionsVisibility : 'none',\n        }\n    }\n\n    changeTaskColour = e => {\n        this.setState({\n            taskColour : e.target.value\n        })\n    }\n\n    preventPropogation = e => {\n        e.stopPropagation()\n    }\n\n    hover = e => {\n        if(!this.props.dragging){\n            e.target.style.textShadow = '0px 0px 8px cyan'\n        }\n    }\n    \n    hoverEnd = e => {\n        e.target.style.textShadow = 'none'\n    }\n\n    optionsClick = e => {\n        if (this.state.optionsVisibility == 'none') {\n            this.setState({\n                optionsVisibility : 'inline-block'\n            })\n        } else {\n            this.setState({\n                optionsVisibility : 'none'\n            })\n        }\n    }\n\n    descriptionClick = e => {\n        console.log('description')\n    }\n\n    buttonFunctions = {\n        onMouseOver : this.hover,\n        onMouseLeave : this.hoverEnd,\n        onMouseDown : this.preventPropogation\n    }\n\n    defaultStyle = {\n        userSelect : 'none',\n        width : '250px',\n        height : '50px',\n        textAlign : 'center',\n        //this.state is undefined when putting this.state.taskcolour here\n    }\n    \n    render() {\n        var check = this.props.selected ? '✔' : ''\n        if (this.props.dragging == this.props.name) {\n            var styling = Object.assign({\n                pointerEvents : 'none',\n                zIndex : 1,\n                position : 'fixed',\n                top : (this.props.mouse.y-25)+'px',\n                left : (this.props.mouse.x-125)+'px',\n                backgroundColor : this.state.taskColour,\n            },this.defaultStyle)\n\n            var ghostDiv = <div style={{\n                position : 'relative',\n                marginTop : '20px',\n                marginLeft : this.props.marginLeft,\n                width : '250px',\n                height : '50px',\n                transform : this.props.size\n          }}>\n            </div>\n        } else {\n            var styling = Object.assign({\n                marginLeft : this.props.marginLeft,\n                position : 'relative',\n                marginTop : '20px',               \n                backgroundColor : this.state.taskColour,\n            },this.defaultStyle)\n            \n            var ghostDiv = null\n        }    \n        //in options when reordering tasks:\n        //name value changes to the task moved to dragged tasks old position\n        //also task moved to that position is changed to the dragged's task colour \n        //dragged task name follows to the new position, but colour changes to the \n        //colour of the task that was in that position before\n        //i know that putting these values in tasks state as a single object will solve it\n        //but before i do that i want to know more about why/how it happens\n        return( \n            <>\n            <div style={styling}\n                onMouseOver={e =>this.props.dragOver(e,this.props.name)}\n                onMouseDown={() => this.props.dragStart(this.props.name)}\n            >\n                <CheckBox name={this.props.name} \n                    preventPropogation={this.preventPropogation}\n                    selectTask={this.props.selectTask}\n                    check={check}/>\n                <span \n                    style={{ \n                    position : 'absolute',\n                    top : '30px',\n                    left : '230px',\n                    float : 'right',                     \n                }}>\n                    <TaskButton\n                        buttonFunctions={this.buttonFunctions}\n                        onClick={this.descriptionClick}\n                        symbol='?'\n                    />\n                    </span>\n                <span \n                    style={{lineHeight : '50px'}}>\n                    {this.props.name}\n                </span> \n\n            </div> \n\n            {ghostDiv}\n            </>\n        )\n    }\n}","import React, { Component } from 'react'\n\nexport default class Options extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            taskName : '',\n            listName : '',\n            taskColour : '',\n            viewColour : '',\n            description : ''\n        }\n    }\n    container = {\n        color: 'white',\n        display:'grid',\n        position : 'fixed',\n        alignItems : 'center',\n        justifyItems : 'center',\n        //gridRowGap : '5px',\n        //gridTemplateColumns : '30%, 70%',\n        margin : '0 auto',\n        top: '40%',\n        left:'50%',\n        marginTop : '-100px',\n        marginLeft : '-150px',\n        backgroundColor : '#079d41',\n        border : '20px solid #079d41',\n        borderRadius : '20px',\n        width : '300px',\n        height : '200px',\n    }\n    textarea = {\n        maxWidth : '200px',\n        maxHeight : '70px',\n        width : '200px',\n        height : '70px'\n    }\n    render () {\n        var taskNameInput = this.props.disabled ? <input disabled/> : <input/> \n        return(\n            <>\n            <div style={this.container}>\n                List Name<input />\n                Task Name{taskNameInput}\n                Task Colour\n                <input type='color'/>\n                View Colour\n                <input type='color'/>\n                Description <textarea maxLength=\"250\" style={this.textarea}/>\n                <button>Submit</button>\n                <button onClick={() => this.props.deleteTask(this.props.name)}>Delete</button>\n            </div>\n            </>\n        )\n    }\n\n}","import React, { Component } from 'react'\nimport Task from './Task'\nimport Options from './Options'\n\nexport default class View extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            tasks : {},\n            tasksLoaded : false,\n            dragging : null,\n            draggedOver : null,\n            mouse : 0,\n            input : ''\n        }\n    }\n    /*submitOptions = (state, disabled) => {\n        var checkBoxes = {...this.state.checkBoxes}\n        var tasks = [...this.state.tasks]\n        for (let i in checkBoxes){\n            if(checkBoxes[i]){\n                tasks\n            }\n        }\n        \n        state.taskName\n        state.listName\n        state.taskColour\n        state.viewColour\n        state.description\n    }*/\n\n    inputHandle = e => {\n        this.setState({\n            input : e.target.value\n        })\n    }\n\n    selectTask = name => {\n        var checkBoxes = {...this.state.checkBoxes}\n        checkBoxes[name] = !checkBoxes[name]\n        this.setState({\n            checkBoxes : checkBoxes\n        })\n    }\n\n    //use refs to make this state for only the thing being dragged\n    //as opposed to passing it as a prop to every instance and rerendering views a bunch\n    //see if it makes cpu usage better\n    setMouse = e => {\n        if(this.props.activeView == this.props.className && this.state.dragging){\n            this.setState({\n                mouse : {x : e.clientX, y : e.clientY}\n            },()=>{\n                if (this.state.draggedOver){\n                    var tasks = [...this.state.tasks]\n                    let c=0\n                    for (let i of tasks){\n                        if (i.name==this.state.dragging){\n                            var draggingIndex = c\n                            var dragging = tasks[draggingIndex]\n                        } else if (i.name==this.state.draggedOver.name){\n                            var overIndex = c\n                        }\n                        c++\n                    }\n                    //the second condition: because when the first splice happens, the index of draggedOver changes, while the value of 'overIndex' stays the same\n                    if (this.state.mouse.y < this.state.draggedOver.pos && !(draggingIndex<overIndex)){\n                        tasks.splice(draggingIndex,1)\n                        tasks.splice(overIndex,0,dragging)\n                        this.setState({\n                            tasks : tasks\n                        })\n                    } else if (this.state.mouse.y > this.state.draggedOver.pos && !(draggingIndex>overIndex)){ \n                        tasks.splice(draggingIndex,1)\n                        tasks.splice(overIndex,0,dragging)\n                        this.setState({\n                            tasks : tasks\n                        })\n                    }\n                }         \n            })\n        } \n    }\n\n    dragStart = (name) => {\n        this.setState ({\n            dragging : name\n        })\n    }\n\n    drop = () => {\n        this.setState({\n            dragging : null,\n            draggedOver : null,\n            mouse : 0\n        })  \n    }\n\n    dragOver = (e,name) => {\n        if(this.state.dragging){\n            var box = e.target.getBoundingClientRect()\n            var pos = box.bottom - box.height/2\n            this.setState({\n                draggedOver: {name : name, pos : pos}\n            })\n        }\n    }\n    \n    deleteTask = (deletedTask)=> {\n        var xhr = new XMLHttpRequest()\n        xhr.open('DELETE','http://localhost:8000/api/tasks/'+this.props.listId+'/'+this.state.tasks[deletedTask].id)\n        xhr.setRequestHeader('content-type','application/json')\n        xhr.setRequestHeader('X-CSRFTOKEN',document.cookie.slice(10))\n        xhr.onload = () => {\n            console.log(xhr.status)\n            if (xhr.status == 204){\n                    let tasks = [...this.state.tasks]\n                    delete tasks[deletedTask]\n                    this.setState({\n                        tasks: tasks,\n                    })\n                } \n            }\n        xhr.send()\n    } \n       \n    taskCreate = e => { //remember to takeout cors middleware\n        if (!this.state.tasks.includes(this.state.input)){\n            var xhr = new XMLHttpRequest()\n            xhr.open('POST','http://localhost:8000/api/tasks/'+this.props.listId+'/')\n            xhr.setRequestHeader('content-type','application/json')\n            xhr.setRequestHeader('X-CSRFTOKEN',document.cookie.slice(10))\n            xhr.onload = () => {\n                if (xhr.status == 201){\n                    this.setState({\n                        tasks : { ...this.state.tasks, [this.state.input] : {id : JSON.parse(xhr.response).id, colour : '#079d41', description : '', taskCheck : false}},\n                        input : ''\n                    })\n                }\n            }\n            xhr.send(JSON.stringify({listId : this.props.listId, taskName : this.state.input}))\n        }\n    }\n\n    componentDidUpdate(){\n        if (this.props.activeView == this.props.className && !this.state.tasksLoaded) {\n            let xhr = new XMLHttpRequest()\n            xhr.open('GET','http://localhost:8000/api/tasks/'+this.props.listId)\n            xhr.setRequestHeader('content-type','application/json')\n            xhr.responseType = 'json'\n            xhr.onload = () => {\n                if (xhr.status == 200) {\n                    let tasks = {}\n                    xhr.response.map(task => {\n                        tasks[task.taskName]={\n                            id : task.id, \n                            colour : '#079d41', \n                            description : '', \n                            taskCheck : false, \n                            priority : 0\n                        }\n                    })\n                    this.setState({\n                        tasks : tasks,\n                        tasksLoaded : true,\n                    })\n                }\n            }\n            xhr.send()\n        }\n    }\n\n    render(){ \n        /*var disabled = false\n        let c = 0\n        for (let i of Object.values(this.state.checkBoxes)){\n            if(i){c++}\n            if(c>1){\n                disabled = true\n                break\n            }     \n        }*/\n        var styling = {margin : '50px'}\n        if (this.props.activeView != this.props.className) {\n            styling.display = 'none'\n        } \n        console.log(this.state.checkBoxes)\n        var tasks=[]\n        for (let i of this.state.tasks){\n            tasks.push(    \n                <div key={i.name}>\n                    <Task  \n                        colour={i.colour}\n                        selected={this.state.checkBoxes[i.name]}\n                        selectTask={this.selectTask}\n                        listId={this.props.listId}\n                        dragOver={this.dragOver}\n                        dragging={this.state.dragging}\n                        mouse={this.state.mouse}\n                        deleteTask={this.deleteTask}\n                        dragStart={this.dragStart}\n                        subTaskCreate={this.subTaskCreate}\n                        name={i.name}\n                        id={i.id}\n                    /> \n                </div>\n            ) \n        }\n        return (\n            //dropdown to change colour of all tasks at the same time\n            //component on the right for creating task. puts it below\n                //task can then be dragged to be somewhere among the rest\n            \n            <div onMouseMove={this.setMouse} onMouseUp={this.drop} className={this.props.className} style={styling}>\n                <Options disabled={true}/>\n                <input key=\"taskCreationInput\" onChange={this.inputHandle} /><button onClick={this.taskCreate}>create</button>\n                    {tasks}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport TaskButton from './TaskButton'\n\nexport default class ListButtons extends Component {\n    constructor(props) {\n        super(props)\n    }\n//animation when tab is created to show where it is\n//queue animation: when oppened or is already opened, \n    buttonFunctions = {                        \n        onMouseOver:()=>{return},\n        onMouseLeave:()=>{return},\n        onDown:()=>{return},\n        onClick:()=>{return}\n    }\n    styling = {\n        display : 'block',\n        backgroundColor : 'grey', //#676767 and text white\n        position : 'relative',\n        marginTop : '20px',\n        userSelect: 'none',\n        width : '250px',\n        height : '50px',\n        textAlign : 'center',\n    }\n\n    render() {      \n        return (\n            <div\n                style={this.styling}\n                onClick={(e)=>this.props.openNavTab(this.props.list.name,e.target.children[1].value,this.props.list.listId)}\n                >\n                    <span style={{lineHeight : '50px', pointerEvents : 'none'}}>{this.props.list.name}</span>\n                <select \n                    style={{\n                        position : 'absolute',\n                        left: '100%'\n                    }}\n                    onClick={(e)=>e.stopPropagation()}\n                    onChange={(e) => {this.props.editViewColour(this.props.list.name,e.target.value)}}> \n                        <option value='#676768'>#676767</option> \n                        <option value='#333399'>#333399</option>\n                </select>\n                    <span \n                        style={{ \n                            position : 'absolute',\n                            top : '30px',\n                            left : '228px',\n                            float : 'right',                     \n                        }}\n                    >\n                    <TaskButton\n                        symbol='⚙️'\n                        onClick={(e)=>e.stopPropagation()}\n                        buttonFunctions = {this.buttonFunctions}\n                        />\n                </span>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport ListButtons from './ListButtons'\n\nexport default class ListView extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            lists : [],\n            listsLoaded : false\n        }\n    }\n\n    listCreate = e => {\n        var value = e.target.parentNode.children[0].value\n        if (!this.state.lists.some(list => list.name == value) && /\\S/.test(value)){\n            var xhr = new XMLHttpRequest()\n            xhr.open('POST','http://localhost:8000/api/lists/')\n            xhr.setRequestHeader('content-type','application/json')\n            xhr.setRequestHeader('X-CSRFTOKEN',document.cookie.slice(10))\n            xhr.onload = () => {\n                if (xhr.status == 201){\n                    var response = JSON.parse(xhr.response)\n                    this.setState({\n                        lists : [ ...this.state.lists, {name : response.listName, listId : response.id}]\n                    })\n                }\n            }\n            e.target.parentNode.children[0].value = \"\"\n            xhr.send(JSON.stringify({listName : value, userid:1}))\n        }\n    }\n\n    componentDidMount(){\n        if (!this.state.listsLoaded) {\n            let xhr = new XMLHttpRequest()\n            xhr.open('GET','http://localhost:8000/api/lists/')\n            xhr.setRequestHeader('content-type','application/json')\n            xhr.responseType = 'json'\n            xhr.onload = () => {\n                if (xhr.status == 200) {\n                    let lists = []\n                    xhr.response.map(list => {\n                        lists.push(\n                            {\n                                name : list.listName,\n                                listId : list.id\n                            }\n                        )\n                    })\n                    this.setState({\n                        lists : lists,\n                        tasksLoaded : true\n                    })\n                }\n            }\n            xhr.send()\n        }\n    }\n\n    render(){\n        var styling = {margin : '50px'}\n        if (this.props.activeView != this.props.className) {\n            styling.display = 'none'\n        } \n        var buttons = []\n        for (let i of this.state.lists){\n            buttons.push(                \n                <ListButtons \n                openNavTab={this.props.openNavTab} \n                list={i} \n                editViewColour={this.props.editViewColour}\n                />)\n        }\n        return (\n            <div style={styling} className={this.props.className}>\n                <input /><button onClick={this.listCreate}>create</button>\n                {buttons}\n\n            </div>\n        )\n    }\n}","import React, {Component} from 'react'\n\nexport default class Registration extends Component {\n    constructor(props){\n        super(props)\n            this.state = {\n                view : 'login',\n                loginUser : '',\n                loginPass : '',\n                registerUser : '',\n                registerPass : '',\n                registerPass2 : ''\n            }\n    }\n    register = () => { //password 2(confirm password) 3rd arg\n        var xhr = new XMLHttpRequest()\n        xhr.open('POST','http://localhost:8000/register/')\n        xhr.setRequestHeader('content-type','application/json')\n        xhr.onload = () => {console.log('loaded: ',xhr.response, xhr.status)}\n        console.log(this.state.registerUser,this.state.registerPass)\n        xhr.send(JSON.stringify({username: this.state.registerUser, password: this.state.registerPass}))\n      }\n    \n    loginUserHandle = e => {\n        this.setState({\n            loginUser : e.target.value\n        },console.log(this.state.loginUser))      \n    }\n\n    loginPassHandle = e => {\n        this.setState({\n            loginPass : e.target.value\n        })\n    }\n\n    registerUserHandle = e => {\n        this.setState({\n            registerUser : e.target.value\n        })\n    }\n\n    registerPassHandle = e => {\n        this.setState({\n            registerPass : e.target.value\n        })\n    }\n\n    registerPass2Handle = e => {\n        this.setState({\n            registerPass2 : e.target.value\n        })\n    }\n\n    tabClick = e => {\n        if (e.target.innerText != this.state.view){\n            this.setState({\n                view : e.target.innerText,\n            })\n        }\n    }\n    container = {\n        color: 'white',\n        display:'grid',\n        position : 'absolute',\n        alignItems : 'center',\n        justifyItems : 'center',\n        //gridRowGap : '5px',\n        //gridTemplateColumns : '30%, 70%',\n        margin : '0 auto',\n        top: '50%',\n        left:'50%',\n        marginTop : '-100px',\n        marginLeft : '-150px',\n        backgroundColor : '#676768',\n        border : '20px solid #676768',\n        borderRadius : '20px',\n        width : '300px',\n        height : '200px',\n    }\n    nav = {\n        mixBlendMode: 'screen',\n        fontSize : '80%',\n        display : 'grid',\n        gridTemplateColumns : '50% 50%',\n        textAlign : 'center',\n        position : 'absolute',\n        top : -20,\n        width : '340px',\n        height : '10px',\n        //backgroundColor : 'rgba(255,255,255,0.5)',\n        //borderBottomColor : 'black',\n        //borderRadius : '20px',\n    }\n    inactiveTab = {\n        cursor : 'pointer',\n        backgroundColor : 'rgba(255,255,255,0.1)',\n        paddingBottom : '3px'\n    }\n    activeTab = {\n        opacity : '0.5'\n    }\n    render(){\n        if (this.state.view == 'login') {\n            var loginStyle = this.activeTab\n            var registerStyle = this.inactiveTab\n            var view = <>\n                Username<input key='logUser' onChange={this.loginUserHandle}/>\n                Password<input key='logPass' onChange={this.loginPassHandle} type={'password'}/>\n                <button onClick={() => this.props.login(this.state.loginUser,this.state.loginPass)}>login</button>\n            </>\n        } else {\n            var loginStyle = this.inactiveTab\n            var registerStyle = this.activeTab \n            var view =  <>\n                Username<input key='regUser' onChange={this.registerUserHandle}/>\n                Password<input key='regPass' onChange={this.registerPassHandle} type={'password'}/>\n                Confirm Password<input key='regPass2' onChange={this.registerPass2Handle} type={'password'}/>\n                <button onClick={this.register}>create</button>\n            </>\n        }\n        return(\n            <div style={this.container}>\n                <div style={this.nav}>\n                    <span onClick={this.tabClick} style={registerStyle}>register</span>\n                    <span onClick={this.tabClick} style={loginStyle}>login</span>\n                </div>\n                {view}\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport NavBar from './components/NavBar'\nimport View from './components/View.js'\nimport ListView from './components/ListView.js'\nimport Registration from './components/Registration.js'\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      views : [],\n      colour : '#079d41',\n      activeView : 'Lists',\n      loggedIn : false,\n      user : {}\n    }\n  }\n  login = (username,password) => {\n    var xhr = new XMLHttpRequest()\n    xhr.open('POST','http://localhost:8000/login/')\n    xhr.setRequestHeader('content-type','application/json')\n    xhr.onload = () => {\n      console.log(xhr.response)\n      if (xhr.response == '\"Success\"') {\n        localStorage.setItem('loggedIn', true)\n        this.setState ({\n          loggedIn : true\n        })\n      } \n      //setstate loggedin true, user {id and name?}\n    }\n    xhr.send(JSON.stringify({username: username, password: password}))\n  }\n\n  changeView = (className, colourCode) => {\n    //this worked for some reason -> this.state.activeView = e.target.id\n    this.setState({\n      activeView : className,\n      colour : colourCode\n    })\n  }\n\n  editViewColour = (className, colourCode) => {\n    let tabs = []\n    for(let i of this.state.views){\n      if(i.className == className){\n        tabs.push({className : className, colourCode : colourCode, listId : i.listId})\n      } else {\n        tabs.push(i)\n      }\n    }\n    this.setState({\n      views : tabs\n    })\n  }\n\n  openNavTab = (name, colourCode, listId) => {\n    //prevents duplicates\n    console.log(colourCode)\n    if (this.state.views.some(view => view.className == name)){\n      return\n    }\n    this.setState({\n        views : [ ...this.state.views, {className: name, colourCode: colourCode, listId : listId}]\n    })\n  }\n\n  closeNavTab = e => {\n    e.stopPropagation()\n    var tabs=[]\n    var className = e.target.parentNode.className\n    for (let i of this.state.views){\n      if (i.className != className){\n        tabs.push(i)\n      }\n    }\n    this.setState ({\n      views: tabs\n    },() =>{\n      if(!this.state.views.length){\n        this.changeView('Lists','#079d41')\n      } else {      \n        let view = this.state.views.slice(-1)[0]\n        this.changeView(view.className,view.colourCode)\n        //this is annoying if you have another tab open that you are not closing. come back to this.\n      } \n    })\n  }\n\n  componentWillMount(){\n    if (!this.state.loggedIn && localStorage.getItem('loggedIn') == \"true\"){\n      this.setState({\n        loggedIn : true\n      })\n    }\n  }\n  render() {\n    document.body.style.backgroundColor = this.state.colour\n    if (this.state.loggedIn){\n      var views=[]\n      for (let i of this.state.views){\n        views.push(\n        <View \n        key={i.className}\n        listId={i.listId}\n        className={i.className} \n        activeView={this.state.activeView}/>\n        )\n      }\n      var show = [<NavBar views={this.state.views} \n        closeNavTab={this.closeNavTab} \n        changeView={this.changeView}\n        activeView={this.state.activeView}/>,\n    \n        <div id='views'>\n          <ListView className='Lists'\n          openNavTab={this.openNavTab} \n          editViewColour={this.editViewColour} \n          activeView={this.state.activeView}/>\n          {views}\n        </div>]\n    } else {\n      var show = <Registration login={this.login}/>\n    }\n    \n    return ( \n      <>\n        {show}\n        <a onClick = {()=>localStorage.setItem('loggedIn', false)}\n        href='http://localhost:8000/logout'>logout</a>\n      </>\n    )\n  }\n}\n\nexport default App;\n    //https://htmlcolorcodes.com/\n    //https://scriptverse.academy/tutorials/reactjs-update-array-state.html\n    //https://stackoverflow.com/questions/37435334/correct-way-to-push-into-state-array\n    //https://www.iconarchive.com","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}